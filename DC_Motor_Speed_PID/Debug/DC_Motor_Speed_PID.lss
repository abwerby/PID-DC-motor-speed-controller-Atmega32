
DC_Motor_Speed_PID.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f30  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000f30  00000fc4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  00800072  00800072  00000fd6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000fd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001008  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00001044  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001678  00000000  00000000  000011c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c6  00000000  00000000  0000283c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010e7  00000000  00000000  00003202  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000354  00000000  00000000  000042ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064b  00000000  00000000  00004640  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000112d  00000000  00000000  00004c8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00005db8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 9b 03 	jmp	0x736	; 0x736 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e3       	ldi	r30, 0x30	; 48
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 38       	cpi	r26, 0x84	; 132
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1f 04 	call	0x83e	; 0x83e <main>
  8a:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_VidSetPortDirection>:
	case 3 :
		 Value = PIND_Reg ;
		break;
	}
	return Value ;
}
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	41 f0       	breq	.+16     	; 0xa6 <DIO_VidSetPortDirection+0x14>
  96:	28 f0       	brcs	.+10     	; 0xa2 <DIO_VidSetPortDirection+0x10>
  98:	82 30       	cpi	r24, 0x02	; 2
  9a:	39 f0       	breq	.+14     	; 0xaa <DIO_VidSetPortDirection+0x18>
  9c:	83 30       	cpi	r24, 0x03	; 3
  9e:	39 f0       	breq	.+14     	; 0xae <DIO_VidSetPortDirection+0x1c>
  a0:	08 95       	ret
  a2:	6a bb       	out	0x1a, r22	; 26
  a4:	08 95       	ret
  a6:	67 bb       	out	0x17, r22	; 23
  a8:	08 95       	ret
  aa:	64 bb       	out	0x14, r22	; 20
  ac:	08 95       	ret
  ae:	61 bb       	out	0x11, r22	; 17
  b0:	08 95       	ret

000000b2 <DIO_VidSetPortValue>:
  b2:	81 30       	cpi	r24, 0x01	; 1
  b4:	41 f0       	breq	.+16     	; 0xc6 <DIO_VidSetPortValue+0x14>
  b6:	28 f0       	brcs	.+10     	; 0xc2 <DIO_VidSetPortValue+0x10>
  b8:	82 30       	cpi	r24, 0x02	; 2
  ba:	39 f0       	breq	.+14     	; 0xca <DIO_VidSetPortValue+0x18>
  bc:	83 30       	cpi	r24, 0x03	; 3
  be:	39 f0       	breq	.+14     	; 0xce <DIO_VidSetPortValue+0x1c>
  c0:	08 95       	ret
  c2:	6b bb       	out	0x1b, r22	; 27
  c4:	08 95       	ret
  c6:	68 bb       	out	0x18, r22	; 24
  c8:	08 95       	ret
  ca:	65 bb       	out	0x15, r22	; 21
  cc:	08 95       	ret
  ce:	62 bb       	out	0x12, r22	; 18
  d0:	08 95       	ret

000000d2 <DIO_VidSetPinDirection>:
  d2:	81 30       	cpi	r24, 0x01	; 1
  d4:	11 f1       	breq	.+68     	; 0x11a <DIO_VidSetPinDirection+0x48>
  d6:	30 f0       	brcs	.+12     	; 0xe4 <DIO_VidSetPinDirection+0x12>
  d8:	82 30       	cpi	r24, 0x02	; 2
  da:	d1 f1       	breq	.+116    	; 0x150 <DIO_VidSetPinDirection+0x7e>
  dc:	83 30       	cpi	r24, 0x03	; 3
  de:	09 f4       	brne	.+2      	; 0xe2 <DIO_VidSetPinDirection+0x10>
  e0:	52 c0       	rjmp	.+164    	; 0x186 <DIO_VidSetPinDirection+0xb4>
  e2:	08 95       	ret
  e4:	4f 3f       	cpi	r20, 0xFF	; 255
  e6:	59 f4       	brne	.+22     	; 0xfe <DIO_VidSetPinDirection+0x2c>
  e8:	2a b3       	in	r18, 0x1a	; 26
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <DIO_VidSetPinDirection+0x22>
  f0:	88 0f       	add	r24, r24
  f2:	99 1f       	adc	r25, r25
  f4:	6a 95       	dec	r22
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <DIO_VidSetPinDirection+0x1e>
  f8:	82 2b       	or	r24, r18
  fa:	8a bb       	out	0x1a, r24	; 26
  fc:	08 95       	ret
  fe:	41 11       	cpse	r20, r1
 100:	5c c0       	rjmp	.+184    	; 0x1ba <DIO_VidSetPinDirection+0xe8>
 102:	2a b3       	in	r18, 0x1a	; 26
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_VidSetPinDirection+0x3c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_VidSetPinDirection+0x38>
 112:	80 95       	com	r24
 114:	82 23       	and	r24, r18
 116:	8a bb       	out	0x1a, r24	; 26
 118:	08 95       	ret
 11a:	4f 3f       	cpi	r20, 0xFF	; 255
 11c:	59 f4       	brne	.+22     	; 0x134 <DIO_VidSetPinDirection+0x62>
 11e:	27 b3       	in	r18, 0x17	; 23
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_VidSetPinDirection+0x58>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_VidSetPinDirection+0x54>
 12e:	82 2b       	or	r24, r18
 130:	87 bb       	out	0x17, r24	; 23
 132:	08 95       	ret
 134:	41 11       	cpse	r20, r1
 136:	41 c0       	rjmp	.+130    	; 0x1ba <DIO_VidSetPinDirection+0xe8>
 138:	27 b3       	in	r18, 0x17	; 23
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_VidSetPinDirection+0x72>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	6a 95       	dec	r22
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_VidSetPinDirection+0x6e>
 148:	80 95       	com	r24
 14a:	82 23       	and	r24, r18
 14c:	87 bb       	out	0x17, r24	; 23
 14e:	08 95       	ret
 150:	4f 3f       	cpi	r20, 0xFF	; 255
 152:	59 f4       	brne	.+22     	; 0x16a <DIO_VidSetPinDirection+0x98>
 154:	24 b3       	in	r18, 0x14	; 20
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_VidSetPinDirection+0x8e>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_VidSetPinDirection+0x8a>
 164:	82 2b       	or	r24, r18
 166:	84 bb       	out	0x14, r24	; 20
 168:	08 95       	ret
 16a:	41 11       	cpse	r20, r1
 16c:	26 c0       	rjmp	.+76     	; 0x1ba <DIO_VidSetPinDirection+0xe8>
 16e:	24 b3       	in	r18, 0x14	; 20
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_VidSetPinDirection+0xa8>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_VidSetPinDirection+0xa4>
 17e:	80 95       	com	r24
 180:	82 23       	and	r24, r18
 182:	84 bb       	out	0x14, r24	; 20
 184:	08 95       	ret
 186:	4f 3f       	cpi	r20, 0xFF	; 255
 188:	59 f4       	brne	.+22     	; 0x1a0 <DIO_VidSetPinDirection+0xce>
 18a:	21 b3       	in	r18, 0x11	; 17
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_VidSetPinDirection+0xc4>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_VidSetPinDirection+0xc0>
 19a:	82 2b       	or	r24, r18
 19c:	81 bb       	out	0x11, r24	; 17
 19e:	08 95       	ret
 1a0:	41 11       	cpse	r20, r1
 1a2:	0b c0       	rjmp	.+22     	; 0x1ba <DIO_VidSetPinDirection+0xe8>
 1a4:	21 b3       	in	r18, 0x11	; 17
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_VidSetPinDirection+0xde>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_VidSetPinDirection+0xda>
 1b4:	80 95       	com	r24
 1b6:	82 23       	and	r24, r18
 1b8:	81 bb       	out	0x11, r24	; 17
 1ba:	08 95       	ret

000001bc <DIO_VidSetPinValue>:
 1bc:	81 30       	cpi	r24, 0x01	; 1
 1be:	11 f1       	breq	.+68     	; 0x204 <DIO_VidSetPinValue+0x48>
 1c0:	30 f0       	brcs	.+12     	; 0x1ce <DIO_VidSetPinValue+0x12>
 1c2:	82 30       	cpi	r24, 0x02	; 2
 1c4:	69 f1       	breq	.+90     	; 0x220 <DIO_VidSetPinValue+0x64>
 1c6:	83 30       	cpi	r24, 0x03	; 3
 1c8:	09 f4       	brne	.+2      	; 0x1cc <DIO_VidSetPinValue+0x10>
 1ca:	45 c0       	rjmp	.+138    	; 0x256 <DIO_VidSetPinValue+0x9a>
 1cc:	08 95       	ret
 1ce:	4f 3f       	cpi	r20, 0xFF	; 255
 1d0:	59 f4       	brne	.+22     	; 0x1e8 <DIO_VidSetPinValue+0x2c>
 1d2:	2b b3       	in	r18, 0x1b	; 27
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_VidSetPinValue+0x22>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_VidSetPinValue+0x1e>
 1e2:	82 2b       	or	r24, r18
 1e4:	8b bb       	out	0x1b, r24	; 27
 1e6:	08 95       	ret
 1e8:	41 11       	cpse	r20, r1
 1ea:	4f c0       	rjmp	.+158    	; 0x28a <DIO_VidSetPinValue+0xce>
 1ec:	2b b3       	in	r18, 0x1b	; 27
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_VidSetPinValue+0x3c>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_VidSetPinValue+0x38>
 1fc:	80 95       	com	r24
 1fe:	82 23       	and	r24, r18
 200:	8b bb       	out	0x1b, r24	; 27
 202:	08 95       	ret
 204:	4f 3f       	cpi	r20, 0xFF	; 255
 206:	09 f0       	breq	.+2      	; 0x20a <DIO_VidSetPinValue+0x4e>
 208:	40 c0       	rjmp	.+128    	; 0x28a <DIO_VidSetPinValue+0xce>
 20a:	28 b3       	in	r18, 0x18	; 24
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_VidSetPinValue+0x5a>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_VidSetPinValue+0x56>
 21a:	82 2b       	or	r24, r18
 21c:	88 bb       	out	0x18, r24	; 24
 21e:	08 95       	ret
 220:	4f 3f       	cpi	r20, 0xFF	; 255
 222:	59 f4       	brne	.+22     	; 0x23a <DIO_VidSetPinValue+0x7e>
 224:	25 b3       	in	r18, 0x15	; 21
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	02 c0       	rjmp	.+4      	; 0x230 <DIO_VidSetPinValue+0x74>
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	6a 95       	dec	r22
 232:	e2 f7       	brpl	.-8      	; 0x22c <DIO_VidSetPinValue+0x70>
 234:	82 2b       	or	r24, r18
 236:	85 bb       	out	0x15, r24	; 21
 238:	08 95       	ret
 23a:	41 11       	cpse	r20, r1
 23c:	26 c0       	rjmp	.+76     	; 0x28a <DIO_VidSetPinValue+0xce>
 23e:	25 b3       	in	r18, 0x15	; 21
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_VidSetPinValue+0x8e>
 246:	88 0f       	add	r24, r24
 248:	99 1f       	adc	r25, r25
 24a:	6a 95       	dec	r22
 24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_VidSetPinValue+0x8a>
 24e:	80 95       	com	r24
 250:	82 23       	and	r24, r18
 252:	85 bb       	out	0x15, r24	; 21
 254:	08 95       	ret
 256:	4f 3f       	cpi	r20, 0xFF	; 255
 258:	59 f4       	brne	.+22     	; 0x270 <DIO_VidSetPinValue+0xb4>
 25a:	22 b3       	in	r18, 0x12	; 18
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_VidSetPinValue+0xaa>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_VidSetPinValue+0xa6>
 26a:	82 2b       	or	r24, r18
 26c:	82 bb       	out	0x12, r24	; 18
 26e:	08 95       	ret
 270:	41 11       	cpse	r20, r1
 272:	0b c0       	rjmp	.+22     	; 0x28a <DIO_VidSetPinValue+0xce>
 274:	22 b3       	in	r18, 0x12	; 18
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIO_VidSetPinValue+0xc4>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	6a 95       	dec	r22
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIO_VidSetPinValue+0xc0>
 284:	80 95       	com	r24
 286:	82 23       	and	r24, r18
 288:	82 bb       	out	0x12, r24	; 18
 28a:	08 95       	ret

0000028c <DIO_u8GetPinValue>:

uint8_t DIO_u8GetPinValue(uint8_t PortId , uint8_t PinNumber)
{
	uint8_t Value ;
	switch(PortId)
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	c9 f0       	breq	.+50     	; 0x2c2 <DIO_u8GetPinValue+0x36>
 290:	28 f0       	brcs	.+10     	; 0x29c <DIO_u8GetPinValue+0x10>
 292:	82 30       	cpi	r24, 0x02	; 2
 294:	49 f1       	breq	.+82     	; 0x2e8 <DIO_u8GetPinValue+0x5c>
 296:	83 30       	cpi	r24, 0x03	; 3
 298:	d1 f1       	breq	.+116    	; 0x30e <DIO_u8GetPinValue+0x82>
 29a:	4b c0       	rjmp	.+150    	; 0x332 <DIO_u8GetPinValue+0xa6>
	{
	case 0 :
		 Value = GET_BIT(PINA_Reg,PinNumber) ;
 29c:	29 b3       	in	r18, 0x19	; 25
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	06 2e       	mov	r0, r22
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <DIO_u8GetPinValue+0x1e>
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	0a 94       	dec	r0
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <DIO_u8GetPinValue+0x1a>
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	82 23       	and	r24, r18
 2b2:	93 23       	and	r25, r19
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_u8GetPinValue+0x2e>
 2b6:	95 95       	asr	r25
 2b8:	87 95       	ror	r24
 2ba:	6a 95       	dec	r22
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_u8GetPinValue+0x2a>
 2be:	98 2f       	mov	r25, r24
		break;
 2c0:	38 c0       	rjmp	.+112    	; 0x332 <DIO_u8GetPinValue+0xa6>
	case 1 :
		Value = GET_BIT(PINB_Reg,PinNumber) ;
 2c2:	26 b3       	in	r18, 0x16	; 22
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	06 2e       	mov	r0, r22
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <DIO_u8GetPinValue+0x44>
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	0a 94       	dec	r0
 2d2:	e2 f7       	brpl	.-8      	; 0x2cc <DIO_u8GetPinValue+0x40>
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	82 23       	and	r24, r18
 2d8:	93 23       	and	r25, r19
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_u8GetPinValue+0x54>
 2dc:	95 95       	asr	r25
 2de:	87 95       	ror	r24
 2e0:	6a 95       	dec	r22
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_u8GetPinValue+0x50>
 2e4:	98 2f       	mov	r25, r24
		break;
 2e6:	25 c0       	rjmp	.+74     	; 0x332 <DIO_u8GetPinValue+0xa6>
	case 2 :
		 Value = GET_BIT(PINC_Reg,PinNumber) ;
 2e8:	23 b3       	in	r18, 0x13	; 19
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	06 2e       	mov	r0, r22
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_u8GetPinValue+0x6a>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	0a 94       	dec	r0
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_u8GetPinValue+0x66>
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	82 23       	and	r24, r18
 2fe:	93 23       	and	r25, r19
 300:	02 c0       	rjmp	.+4      	; 0x306 <DIO_u8GetPinValue+0x7a>
 302:	95 95       	asr	r25
 304:	87 95       	ror	r24
 306:	6a 95       	dec	r22
 308:	e2 f7       	brpl	.-8      	; 0x302 <DIO_u8GetPinValue+0x76>
 30a:	98 2f       	mov	r25, r24
		break;
 30c:	12 c0       	rjmp	.+36     	; 0x332 <DIO_u8GetPinValue+0xa6>
	case 3 :
		 Value = GET_BIT(PIND_Reg,PinNumber) ;
 30e:	20 b3       	in	r18, 0x10	; 16
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	06 2e       	mov	r0, r22
 316:	02 c0       	rjmp	.+4      	; 0x31c <DIO_u8GetPinValue+0x90>
 318:	88 0f       	add	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	0a 94       	dec	r0
 31e:	e2 f7       	brpl	.-8      	; 0x318 <DIO_u8GetPinValue+0x8c>
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	82 23       	and	r24, r18
 324:	93 23       	and	r25, r19
 326:	02 c0       	rjmp	.+4      	; 0x32c <DIO_u8GetPinValue+0xa0>
 328:	95 95       	asr	r25
 32a:	87 95       	ror	r24
 32c:	6a 95       	dec	r22
 32e:	e2 f7       	brpl	.-8      	; 0x328 <DIO_u8GetPinValue+0x9c>
 330:	98 2f       	mov	r25, r24
		break;
	}
	return Value ;
}
 332:	89 2f       	mov	r24, r25
 334:	08 95       	ret

00000336 <INT0_Init>:


void INT0_Init(uint8_t INT_MODE )
{ 
	/* Set Global Interrupt Enable */
	sei();
 336:	78 94       	sei
	
	/* Enable INT0 */
    SET_BIT(GICR,6);  // 6 INT0
 338:	9b b7       	in	r25, 0x3b	; 59
 33a:	90 64       	ori	r25, 0x40	; 64
 33c:	9b bf       	out	0x3b, r25	; 59

	/* Choose Int Mode */
	if(INT_MODE == Low_Lvl)
 33e:	81 11       	cpse	r24, r1
 340:	07 c0       	rjmp	.+14     	; 0x350 <INT0_Init+0x1a>
	{
		CLR_BIT(MCUCR,0); // 0=ISC00
 342:	85 b7       	in	r24, 0x35	; 53
 344:	8e 7f       	andi	r24, 0xFE	; 254
 346:	85 bf       	out	0x35, r24	; 53
		CLR_BIT(MCUCR,1); // 1=ISC01
 348:	85 b7       	in	r24, 0x35	; 53
 34a:	8d 7f       	andi	r24, 0xFD	; 253
 34c:	85 bf       	out	0x35, r24	; 53
 34e:	08 95       	ret
	}
	else if(INT_MODE == Logical_Change)
 350:	81 30       	cpi	r24, 0x01	; 1
 352:	39 f4       	brne	.+14     	; 0x362 <INT0_Init+0x2c>
	{
		SET_BIT(MCUCR,0);
 354:	85 b7       	in	r24, 0x35	; 53
 356:	81 60       	ori	r24, 0x01	; 1
 358:	85 bf       	out	0x35, r24	; 53
		CLR_BIT(MCUCR,1);
 35a:	85 b7       	in	r24, 0x35	; 53
 35c:	8d 7f       	andi	r24, 0xFD	; 253
 35e:	85 bf       	out	0x35, r24	; 53
 360:	08 95       	ret
	}
	else if(INT_MODE == Falling_Edge)
 362:	82 30       	cpi	r24, 0x02	; 2
 364:	39 f4       	brne	.+14     	; 0x374 <INT0_Init+0x3e>
	{
		CLR_BIT(MCUCR,0);
 366:	85 b7       	in	r24, 0x35	; 53
 368:	8e 7f       	andi	r24, 0xFE	; 254
 36a:	85 bf       	out	0x35, r24	; 53
		SET_BIT(MCUCR,1);
 36c:	85 b7       	in	r24, 0x35	; 53
 36e:	82 60       	ori	r24, 0x02	; 2
 370:	85 bf       	out	0x35, r24	; 53
 372:	08 95       	ret
	}
	else if(INT_MODE == Rising_Edge)
 374:	83 30       	cpi	r24, 0x03	; 3
 376:	31 f4       	brne	.+12     	; 0x384 <INT0_Init+0x4e>
	{
		SET_BIT(MCUCR,0);
 378:	85 b7       	in	r24, 0x35	; 53
 37a:	81 60       	ori	r24, 0x01	; 1
 37c:	85 bf       	out	0x35, r24	; 53
		SET_BIT(MCUCR,1);
 37e:	85 b7       	in	r24, 0x35	; 53
 380:	82 60       	ori	r24, 0x02	; 2
 382:	85 bf       	out	0x35, r24	; 53
 384:	08 95       	ret

00000386 <LCD_vidSendCommand>:
		/* Write bytes of DDRAM */
		LCD_vidWriteCharctr(iteration2);

		_delay_ms(5);
	}
}
 386:	cf 93       	push	r28
 388:	c8 2f       	mov	r28, r24
 38a:	40 e0       	ldi	r20, 0x00	; 0
 38c:	60 e0       	ldi	r22, 0x00	; 0
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 394:	40 e0       	ldi	r20, 0x00	; 0
 396:	61 e0       	ldi	r22, 0x01	; 1
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 39e:	4f ef       	ldi	r20, 0xFF	; 255
 3a0:	62 e0       	ldi	r22, 0x02	; 2
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 3a8:	6c 2f       	mov	r22, r28
 3aa:	82 e0       	ldi	r24, 0x02	; 2
 3ac:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_VidSetPortValue>
 3b0:	40 e0       	ldi	r20, 0x00	; 0
 3b2:	62 e0       	ldi	r22, 0x02	; 2
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 3ba:	81 ee       	ldi	r24, 0xE1	; 225
 3bc:	94 e0       	ldi	r25, 0x04	; 4
 3be:	01 97       	sbiw	r24, 0x01	; 1
 3c0:	f1 f7       	brne	.-4      	; 0x3be <LCD_vidSendCommand+0x38>
 3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <LCD_vidSendCommand+0x3e>
 3c4:	00 00       	nop
 3c6:	4f ef       	ldi	r20, 0xFF	; 255
 3c8:	62 e0       	ldi	r22, 0x02	; 2
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 3d0:	83 ec       	ldi	r24, 0xC3	; 195
 3d2:	99 e0       	ldi	r25, 0x09	; 9
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <LCD_vidSendCommand+0x4e>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <LCD_vidSendCommand+0x54>
 3da:	00 00       	nop
 3dc:	cf 91       	pop	r28
 3de:	08 95       	ret

000003e0 <LCD_vidInit>:
 3e0:	8b e4       	ldi	r24, 0x4B	; 75
 3e2:	9d e1       	ldi	r25, 0x1D	; 29
 3e4:	01 97       	sbiw	r24, 0x01	; 1
 3e6:	f1 f7       	brne	.-4      	; 0x3e4 <LCD_vidInit+0x4>
 3e8:	00 c0       	rjmp	.+0      	; 0x3ea <LCD_vidInit+0xa>
 3ea:	00 00       	nop
 3ec:	82 e0       	ldi	r24, 0x02	; 2
 3ee:	0e 94 c3 01 	call	0x386	; 0x386 <LCD_vidSendCommand>
 3f2:	85 ea       	ldi	r24, 0xA5	; 165
 3f4:	9e e0       	ldi	r25, 0x0E	; 14
 3f6:	01 97       	sbiw	r24, 0x01	; 1
 3f8:	f1 f7       	brne	.-4      	; 0x3f6 <LCD_vidInit+0x16>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <LCD_vidInit+0x1c>
 3fc:	00 00       	nop
 3fe:	88 e3       	ldi	r24, 0x38	; 56
 400:	0e 94 c3 01 	call	0x386	; 0x386 <LCD_vidSendCommand>
 404:	89 ef       	ldi	r24, 0xF9	; 249
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	01 97       	sbiw	r24, 0x01	; 1
 40a:	f1 f7       	brne	.-4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 40c:	00 c0       	rjmp	.+0      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40e:	00 00       	nop
 410:	8c e0       	ldi	r24, 0x0C	; 12
 412:	0e 94 c3 01 	call	0x386	; 0x386 <LCD_vidSendCommand>
 416:	89 ef       	ldi	r24, 0xF9	; 249
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	01 97       	sbiw	r24, 0x01	; 1
 41c:	f1 f7       	brne	.-4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 420:	00 00       	nop
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	0e 94 c3 01 	call	0x386	; 0x386 <LCD_vidSendCommand>
 428:	85 ea       	ldi	r24, 0xA5	; 165
 42a:	9e e0       	ldi	r25, 0x0E	; 14
 42c:	01 97       	sbiw	r24, 0x01	; 1
 42e:	f1 f7       	brne	.-4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 430:	00 c0       	rjmp	.+0      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 432:	00 00       	nop
 434:	86 e0       	ldi	r24, 0x06	; 6
 436:	0e 94 c3 01 	call	0x386	; 0x386 <LCD_vidSendCommand>
 43a:	83 ef       	ldi	r24, 0xF3	; 243
 43c:	91 e0       	ldi	r25, 0x01	; 1
 43e:	01 97       	sbiw	r24, 0x01	; 1
 440:	f1 f7       	brne	.-4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 442:	00 c0       	rjmp	.+0      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 444:	00 00       	nop
 446:	08 95       	ret

00000448 <LCD_vidWriteCharctr>:
 448:	cf 93       	push	r28
 44a:	c8 2f       	mov	r28, r24
 44c:	4f ef       	ldi	r20, 0xFF	; 255
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 456:	40 e0       	ldi	r20, 0x00	; 0
 458:	61 e0       	ldi	r22, 0x01	; 1
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 460:	4f ef       	ldi	r20, 0xFF	; 255
 462:	62 e0       	ldi	r22, 0x02	; 2
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 46a:	6c 2f       	mov	r22, r28
 46c:	82 e0       	ldi	r24, 0x02	; 2
 46e:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_VidSetPortValue>
 472:	40 e0       	ldi	r20, 0x00	; 0
 474:	62 e0       	ldi	r22, 0x02	; 2
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 47c:	81 ee       	ldi	r24, 0xE1	; 225
 47e:	94 e0       	ldi	r25, 0x04	; 4
 480:	01 97       	sbiw	r24, 0x01	; 1
 482:	f1 f7       	brne	.-4      	; 0x480 <LCD_vidWriteCharctr+0x38>
 484:	00 c0       	rjmp	.+0      	; 0x486 <LCD_vidWriteCharctr+0x3e>
 486:	00 00       	nop
 488:	4f ef       	ldi	r20, 0xFF	; 255
 48a:	62 e0       	ldi	r22, 0x02	; 2
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	0e 94 de 00 	call	0x1bc	; 0x1bc <DIO_VidSetPinValue>
 492:	83 ec       	ldi	r24, 0xC3	; 195
 494:	99 e0       	ldi	r25, 0x09	; 9
 496:	01 97       	sbiw	r24, 0x01	; 1
 498:	f1 f7       	brne	.-4      	; 0x496 <LCD_vidWriteCharctr+0x4e>
 49a:	00 c0       	rjmp	.+0      	; 0x49c <LCD_vidWriteCharctr+0x54>
 49c:	00 00       	nop
 49e:	cf 91       	pop	r28
 4a0:	08 95       	ret

000004a2 <LCD_vidWriteString>:
 4a2:	0f 93       	push	r16
 4a4:	1f 93       	push	r17
 4a6:	cf 93       	push	r28
 4a8:	df 93       	push	r29
 4aa:	66 23       	and	r22, r22
 4ac:	71 f0       	breq	.+28     	; 0x4ca <LCD_vidWriteString+0x28>
 4ae:	ec 01       	movw	r28, r24
 4b0:	61 50       	subi	r22, 0x01	; 1
 4b2:	06 2f       	mov	r16, r22
 4b4:	10 e0       	ldi	r17, 0x00	; 0
 4b6:	0f 5f       	subi	r16, 0xFF	; 255
 4b8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ba:	08 0f       	add	r16, r24
 4bc:	19 1f       	adc	r17, r25
 4be:	89 91       	ld	r24, Y+
 4c0:	0e 94 24 02 	call	0x448	; 0x448 <LCD_vidWriteCharctr>
 4c4:	c0 17       	cp	r28, r16
 4c6:	d1 07       	cpc	r29, r17
 4c8:	d1 f7       	brne	.-12     	; 0x4be <LCD_vidWriteString+0x1c>
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	1f 91       	pop	r17
 4d0:	0f 91       	pop	r16
 4d2:	08 95       	ret

000004d4 <Gotoxy>:
 4d4:	81 11       	cpse	r24, r1
 4d6:	05 c0       	rjmp	.+10     	; 0x4e2 <Gotoxy+0xe>
 4d8:	86 2f       	mov	r24, r22
 4da:	80 68       	ori	r24, 0x80	; 128
 4dc:	0e 94 c3 01 	call	0x386	; 0x386 <LCD_vidSendCommand>
 4e0:	08 95       	ret
 4e2:	81 30       	cpi	r24, 0x01	; 1
 4e4:	21 f4       	brne	.+8      	; 0x4ee <Gotoxy+0x1a>
 4e6:	86 2f       	mov	r24, r22
 4e8:	80 6c       	ori	r24, 0xC0	; 192
 4ea:	0e 94 c3 01 	call	0x386	; 0x386 <LCD_vidSendCommand>
 4ee:	08 95       	ret

000004f0 <LCD_vidWriteNumber>:

void LCD_vidWriteNumber(long  Number)
{
 4f0:	4f 92       	push	r4
 4f2:	5f 92       	push	r5
 4f4:	6f 92       	push	r6
 4f6:	7f 92       	push	r7
 4f8:	8f 92       	push	r8
 4fa:	9f 92       	push	r9
 4fc:	af 92       	push	r10
 4fe:	bf 92       	push	r11
 500:	cf 92       	push	r12
 502:	df 92       	push	r13
 504:	ef 92       	push	r14
 506:	ff 92       	push	r15
 508:	9b 01       	movw	r18, r22
 50a:	ac 01       	movw	r20, r24

	long Temp =1;

	if (Number <= 0)
 50c:	16 16       	cp	r1, r22
 50e:	17 06       	cpc	r1, r23
 510:	18 06       	cpc	r1, r24
 512:	19 06       	cpc	r1, r25
 514:	24 f0       	brlt	.+8      	; 0x51e <LCD_vidWriteNumber+0x2e>
	{
		LCD_vidWriteCharctr('0');
 516:	80 e3       	ldi	r24, 0x30	; 48
 518:	0e 94 24 02 	call	0x448	; 0x448 <LCD_vidWriteCharctr>
 51c:	51 c0       	rjmp	.+162    	; 0x5c0 <LCD_vidWriteNumber+0xd0>
 51e:	c1 2c       	mov	r12, r1
 520:	d1 2c       	mov	r13, r1
 522:	76 01       	movw	r14, r12
 524:	c3 94       	inc	r12
	}
	else
	{
		while (Number!=0)
		{
			uint8_t Reminder = Number % 10;
 526:	0f 2e       	mov	r0, r31
 528:	fa e0       	ldi	r31, 0x0A	; 10
 52a:	8f 2e       	mov	r8, r31
 52c:	91 2c       	mov	r9, r1
 52e:	a1 2c       	mov	r10, r1
 530:	b1 2c       	mov	r11, r1
 532:	f0 2d       	mov	r31, r0
			Number = Number / 10 ;
 534:	ca 01       	movw	r24, r20
 536:	b9 01       	movw	r22, r18
 538:	a5 01       	movw	r20, r10
 53a:	94 01       	movw	r18, r8
 53c:	0e 94 55 07 	call	0xeaa	; 0xeaa <__divmodsi4>
			Temp = Temp * 10 + Reminder ;
 540:	cc 0c       	add	r12, r12
 542:	dd 1c       	adc	r13, r13
 544:	ee 1c       	adc	r14, r14
 546:	ff 1c       	adc	r15, r15
 548:	d7 01       	movw	r26, r14
 54a:	c6 01       	movw	r24, r12
 54c:	88 0f       	add	r24, r24
 54e:	99 1f       	adc	r25, r25
 550:	aa 1f       	adc	r26, r26
 552:	bb 1f       	adc	r27, r27
 554:	88 0f       	add	r24, r24
 556:	99 1f       	adc	r25, r25
 558:	aa 1f       	adc	r26, r26
 55a:	bb 1f       	adc	r27, r27
 55c:	c8 0e       	add	r12, r24
 55e:	d9 1e       	adc	r13, r25
 560:	ea 1e       	adc	r14, r26
 562:	fb 1e       	adc	r15, r27
 564:	c6 0e       	add	r12, r22
 566:	d1 1c       	adc	r13, r1
 568:	e1 1c       	adc	r14, r1
 56a:	f1 1c       	adc	r15, r1
	{
		LCD_vidWriteCharctr('0');
	}
	else
	{
		while (Number!=0)
 56c:	21 15       	cp	r18, r1
 56e:	31 05       	cpc	r19, r1
 570:	41 05       	cpc	r20, r1
 572:	51 05       	cpc	r21, r1
 574:	f9 f6       	brne	.-66     	; 0x534 <LCD_vidWriteNumber+0x44>
		{
			uint8_t Reminder = Number % 10;
			Number = Number / 10 ;
			Temp = Temp * 10 + Reminder ;
		}
		while (Temp != 1)
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	c8 16       	cp	r12, r24
 57a:	d1 04       	cpc	r13, r1
 57c:	e1 04       	cpc	r14, r1
 57e:	f1 04       	cpc	r15, r1
 580:	f9 f0       	breq	.+62     	; 0x5c0 <LCD_vidWriteNumber+0xd0>
		{
			uint8_t Reminder2 = Temp % 10 ;
			LCD_vidWriteCharctr(Reminder2 + 48);
 582:	0f 2e       	mov	r0, r31
 584:	fa e0       	ldi	r31, 0x0A	; 10
 586:	4f 2e       	mov	r4, r31
 588:	51 2c       	mov	r5, r1
 58a:	61 2c       	mov	r6, r1
 58c:	71 2c       	mov	r7, r1
 58e:	f0 2d       	mov	r31, r0
 590:	c7 01       	movw	r24, r14
 592:	b6 01       	movw	r22, r12
 594:	a3 01       	movw	r20, r6
 596:	92 01       	movw	r18, r4
 598:	0e 94 55 07 	call	0xeaa	; 0xeaa <__divmodsi4>
 59c:	82 2e       	mov	r8, r18
 59e:	93 2e       	mov	r9, r19
 5a0:	a4 2e       	mov	r10, r20
 5a2:	b5 2e       	mov	r11, r21
 5a4:	80 e3       	ldi	r24, 0x30	; 48
 5a6:	86 0f       	add	r24, r22
 5a8:	0e 94 24 02 	call	0x448	; 0x448 <LCD_vidWriteCharctr>
			Temp = Temp / 10 ;
 5ac:	c8 2c       	mov	r12, r8
 5ae:	d9 2c       	mov	r13, r9
 5b0:	ea 2c       	mov	r14, r10
 5b2:	fb 2c       	mov	r15, r11
		{
			uint8_t Reminder = Number % 10;
			Number = Number / 10 ;
			Temp = Temp * 10 + Reminder ;
		}
		while (Temp != 1)
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	c8 16       	cp	r12, r24
 5b8:	d1 04       	cpc	r13, r1
 5ba:	e1 04       	cpc	r14, r1
 5bc:	f1 04       	cpc	r15, r1
 5be:	41 f7       	brne	.-48     	; 0x590 <LCD_vidWriteNumber+0xa0>
			Temp = Temp / 10 ;
		}
	}


}
 5c0:	ff 90       	pop	r15
 5c2:	ef 90       	pop	r14
 5c4:	df 90       	pop	r13
 5c6:	cf 90       	pop	r12
 5c8:	bf 90       	pop	r11
 5ca:	af 90       	pop	r10
 5cc:	9f 90       	pop	r9
 5ce:	8f 90       	pop	r8
 5d0:	7f 90       	pop	r7
 5d2:	6f 90       	pop	r6
 5d4:	5f 90       	pop	r5
 5d6:	4f 90       	pop	r4
 5d8:	08 95       	ret

000005da <__vector_1>:
}



ISR(INT0_vect)
{
 5da:	1f 92       	push	r1
 5dc:	0f 92       	push	r0
 5de:	0f b6       	in	r0, 0x3f	; 63
 5e0:	0f 92       	push	r0
 5e2:	11 24       	eor	r1, r1
 5e4:	8f 93       	push	r24
 5e6:	9f 93       	push	r25
	pulse_count++;
 5e8:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <pulse_count>
 5ec:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <pulse_count+0x1>
 5f0:	01 96       	adiw	r24, 0x01	; 1
 5f2:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <pulse_count+0x1>
 5f6:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <pulse_count>
}
 5fa:	9f 91       	pop	r25
 5fc:	8f 91       	pop	r24
 5fe:	0f 90       	pop	r0
 600:	0f be       	out	0x3f, r0	; 63
 602:	0f 90       	pop	r0
 604:	1f 90       	pop	r1
 606:	18 95       	reti

00000608 <Set_Motor_Speed>:

}


uint16_t Set_Motor_Speed (uint16_t Req_Speed , uint16_t Motor_Speed  )
{
 608:	cf 92       	push	r12
 60a:	df 92       	push	r13
 60c:	ef 92       	push	r14
 60e:	ff 92       	push	r15
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
	int16_t Error = 0 ;
	uint16_t PWM = 0 ;
	
	Error = Req_Speed - Motor_Speed ;
 614:	ec 01       	movw	r28, r24
 616:	c6 1b       	sub	r28, r22
 618:	d7 0b       	sbc	r29, r23
	
	int32_t PID = (KP * Error) + ( KI * (Error + Last_Error) * (Time_Interval/2)) + ((KD * (Error - Last_Error)) / Time_Interval);

	Volt_Out = Volt_Out + PID ;
 61a:	60 91 7a 00 	lds	r22, 0x007A	; 0x80007a <Last_Error>
 61e:	70 91 7b 00 	lds	r23, 0x007B	; 0x80007b <Last_Error+0x1>
 622:	6c 0f       	add	r22, r28
 624:	7d 1f       	adc	r23, r29
 626:	cb 01       	movw	r24, r22
 628:	88 0f       	add	r24, r24
 62a:	99 1f       	adc	r25, r25
 62c:	88 0f       	add	r24, r24
 62e:	99 1f       	adc	r25, r25
 630:	68 0f       	add	r22, r24
 632:	79 1f       	adc	r23, r25
 634:	07 2e       	mov	r0, r23
 636:	00 0c       	add	r0, r0
 638:	88 0b       	sbc	r24, r24
 63a:	99 0b       	sbc	r25, r25
 63c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__floatsisf>
 640:	2a e0       	ldi	r18, 0x0A	; 10
 642:	37 ed       	ldi	r19, 0xD7	; 215
 644:	43 ea       	ldi	r20, 0xA3	; 163
 646:	5b e3       	ldi	r21, 0x3B	; 59
 648:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__mulsf3>
 64c:	6b 01       	movw	r12, r22
 64e:	7c 01       	movw	r14, r24
 650:	be 01       	movw	r22, r28
 652:	66 0f       	add	r22, r22
 654:	77 1f       	adc	r23, r23
 656:	ce 01       	movw	r24, r28
 658:	88 0f       	add	r24, r24
 65a:	99 1f       	adc	r25, r25
 65c:	88 0f       	add	r24, r24
 65e:	99 1f       	adc	r25, r25
 660:	88 0f       	add	r24, r24
 662:	99 1f       	adc	r25, r25
 664:	68 0f       	add	r22, r24
 666:	79 1f       	adc	r23, r25
 668:	07 2e       	mov	r0, r23
 66a:	00 0c       	add	r0, r0
 66c:	88 0b       	sbc	r24, r24
 66e:	99 0b       	sbc	r25, r25
 670:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__floatsisf>
 674:	9b 01       	movw	r18, r22
 676:	ac 01       	movw	r20, r24
 678:	c7 01       	movw	r24, r14
 67a:	b6 01       	movw	r22, r12
 67c:	0e 94 46 05 	call	0xa8c	; 0xa8c <__addsf3>
 680:	20 e0       	ldi	r18, 0x00	; 0
 682:	30 e0       	ldi	r19, 0x00	; 0
 684:	a9 01       	movw	r20, r18
 686:	0e 94 46 05 	call	0xa8c	; 0xa8c <__addsf3>
 68a:	0e 94 24 06 	call	0xc48	; 0xc48 <__fixsfsi>
 68e:	c0 90 74 00 	lds	r12, 0x0074	; 0x800074 <Volt_Out>
 692:	d0 90 75 00 	lds	r13, 0x0075	; 0x800075 <Volt_Out+0x1>
 696:	e0 90 76 00 	lds	r14, 0x0076	; 0x800076 <Volt_Out+0x2>
 69a:	f0 90 77 00 	lds	r15, 0x0077	; 0x800077 <Volt_Out+0x3>
 69e:	dc 01       	movw	r26, r24
 6a0:	cb 01       	movw	r24, r22
 6a2:	8c 0d       	add	r24, r12
 6a4:	9d 1d       	adc	r25, r13
 6a6:	ae 1d       	adc	r26, r14
 6a8:	bf 1d       	adc	r27, r15
 6aa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <Volt_Out>
 6ae:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <Volt_Out+0x1>
 6b2:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <Volt_Out+0x2>
 6b6:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <Volt_Out+0x3>

	Last_Error = Error;
 6ba:	d0 93 7b 00 	sts	0x007B, r29	; 0x80007b <Last_Error+0x1>
 6be:	c0 93 7a 00 	sts	0x007A, r28	; 0x80007a <Last_Error>

	if (Volt_Out >= Max_Volt_out)
 6c2:	88 38       	cpi	r24, 0x88	; 136
 6c4:	23 e1       	ldi	r18, 0x13	; 19
 6c6:	92 07       	cpc	r25, r18
 6c8:	a1 05       	cpc	r26, r1
 6ca:	b1 05       	cpc	r27, r1
 6cc:	6c f0       	brlt	.+26     	; 0x6e8 <Set_Motor_Speed+0xe0>
	{
		Volt_Out = Max_Volt_out ;
 6ce:	88 e8       	ldi	r24, 0x88	; 136
 6d0:	93 e1       	ldi	r25, 0x13	; 19
 6d2:	a0 e0       	ldi	r26, 0x00	; 0
 6d4:	b0 e0       	ldi	r27, 0x00	; 0
 6d6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <Volt_Out>
 6da:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <Volt_Out+0x1>
 6de:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <Volt_Out+0x2>
 6e2:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <Volt_Out+0x3>
 6e6:	0d c0       	rjmp	.+26     	; 0x702 <Set_Motor_Speed+0xfa>
	}
	else if (Volt_Out <=0)
 6e8:	18 16       	cp	r1, r24
 6ea:	19 06       	cpc	r1, r25
 6ec:	1a 06       	cpc	r1, r26
 6ee:	1b 06       	cpc	r1, r27
 6f0:	44 f0       	brlt	.+16     	; 0x702 <Set_Motor_Speed+0xfa>
	{
		Volt_Out = 0;
 6f2:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <Volt_Out>
 6f6:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <Volt_Out+0x1>
 6fa:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <Volt_Out+0x2>
 6fe:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <Volt_Out+0x3>
		// apply break
	}
	
	PWM = Volt_Out * PWM_VOLT_RATIO;
	
	return PWM ;
 702:	60 91 74 00 	lds	r22, 0x0074	; 0x800074 <Volt_Out>
 706:	70 91 75 00 	lds	r23, 0x0075	; 0x800075 <Volt_Out+0x1>
 70a:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <Volt_Out+0x2>
 70e:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <Volt_Out+0x3>
 712:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__floatsisf>
 716:	2a ea       	ldi	r18, 0xAA	; 170
 718:	32 e8       	ldi	r19, 0x82	; 130
 71a:	41 e5       	ldi	r20, 0x51	; 81
 71c:	5e e3       	ldi	r21, 0x3E	; 62
 71e:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__mulsf3>
 722:	0e 94 2b 06 	call	0xc56	; 0xc56 <__fixunssfsi>
}
 726:	cb 01       	movw	r24, r22
 728:	df 91       	pop	r29
 72a:	cf 91       	pop	r28
 72c:	ff 90       	pop	r15
 72e:	ef 90       	pop	r14
 730:	df 90       	pop	r13
 732:	cf 90       	pop	r12
 734:	08 95       	ret

00000736 <__vector_11>:
	pulse_count++;
}


ISR(TIMER0_OVF_vect)
{
 736:	1f 92       	push	r1
 738:	0f 92       	push	r0
 73a:	0f b6       	in	r0, 0x3f	; 63
 73c:	0f 92       	push	r0
 73e:	11 24       	eor	r1, r1
 740:	2f 93       	push	r18
 742:	3f 93       	push	r19
 744:	4f 93       	push	r20
 746:	5f 93       	push	r21
 748:	6f 93       	push	r22
 74a:	7f 93       	push	r23
 74c:	8f 93       	push	r24
 74e:	9f 93       	push	r25
 750:	af 93       	push	r26
 752:	bf 93       	push	r27
 754:	ef 93       	push	r30
 756:	ff 93       	push	r31

	speed_rpm = ((pulse_count/Time_Interval)/PPR)*60.0;   // speed equation
 758:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <pulse_count>
 75c:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <pulse_count+0x1>
 760:	80 e0       	ldi	r24, 0x00	; 0
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <__floatunsisf>
 768:	2a e0       	ldi	r18, 0x0A	; 10
 76a:	37 ed       	ldi	r19, 0xD7	; 215
 76c:	43 e2       	ldi	r20, 0x23	; 35
 76e:	5c e3       	ldi	r21, 0x3C	; 60
 770:	0e 94 b2 05 	call	0xb64	; 0xb64 <__divsf3>
 774:	20 e0       	ldi	r18, 0x00	; 0
 776:	30 e0       	ldi	r19, 0x00	; 0
 778:	44 eb       	ldi	r20, 0xB4	; 180
 77a:	53 e4       	ldi	r21, 0x43	; 67
 77c:	0e 94 b2 05 	call	0xb64	; 0xb64 <__divsf3>
 780:	20 e0       	ldi	r18, 0x00	; 0
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	40 e7       	ldi	r20, 0x70	; 112
 786:	52 e4       	ldi	r21, 0x42	; 66
 788:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__mulsf3>
 78c:	0e 94 2b 06 	call	0xc56	; 0xc56 <__fixunssfsi>
 790:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <speed_rpm>
 794:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <speed_rpm+0x1>
 798:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <speed_rpm+0x2>
 79c:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <speed_rpm+0x3>
	PWM_Value = Set_Motor_Speed(GOAL,speed_rpm);
 7a0:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <__data_end>
 7a4:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__data_end+0x1>
 7a8:	0e 94 04 03 	call	0x608	; 0x608 <Set_Motor_Speed>
 7ac:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <PWM_Value+0x1>
 7b0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <PWM_Value>
	Fast_PWM1_init(TIMER_PRESCALER_256, PWM_Value, OC1A);
 7b4:	40 e0       	ldi	r20, 0x00	; 0
 7b6:	bc 01       	movw	r22, r24
 7b8:	84 e0       	ldi	r24, 0x04	; 4
 7ba:	0e 94 8a 04 	call	0x914	; 0x914 <Fast_PWM1_init>
	pulse_count = 0;
 7be:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <pulse_count+0x1>
 7c2:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <pulse_count>
	TCNT0 = Init_ticks;
 7c6:	84 e6       	ldi	r24, 0x64	; 100
 7c8:	82 bf       	out	0x32, r24	; 50

}
 7ca:	ff 91       	pop	r31
 7cc:	ef 91       	pop	r30
 7ce:	bf 91       	pop	r27
 7d0:	af 91       	pop	r26
 7d2:	9f 91       	pop	r25
 7d4:	8f 91       	pop	r24
 7d6:	7f 91       	pop	r23
 7d8:	6f 91       	pop	r22
 7da:	5f 91       	pop	r21
 7dc:	4f 91       	pop	r20
 7de:	3f 91       	pop	r19
 7e0:	2f 91       	pop	r18
 7e2:	0f 90       	pop	r0
 7e4:	0f be       	out	0x3f, r0	; 63
 7e6:	0f 90       	pop	r0
 7e8:	1f 90       	pop	r1
 7ea:	18 95       	reti

000007ec <init_system>:
	return PWM ;
}

void init_system()
{
	DIO_VidSetPortDirection(PORTC, OUTPUT);
 7ec:	6f ef       	ldi	r22, 0xFF	; 255
 7ee:	82 e0       	ldi	r24, 0x02	; 2
 7f0:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VidSetPortDirection>
	DIO_VidSetPortDirection(PORTA, OUTPUT);
 7f4:	6f ef       	ldi	r22, 0xFF	; 255
 7f6:	80 e0       	ldi	r24, 0x00	; 0
 7f8:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VidSetPortDirection>
	DIO_VidSetPortDirection(PORTB, INPUT);
 7fc:	60 e0       	ldi	r22, 0x00	; 0
 7fe:	81 e0       	ldi	r24, 0x01	; 1
 800:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VidSetPortDirection>
	DIO_VidSetPortValue(PORTB, HIGH);
 804:	6f ef       	ldi	r22, 0xFF	; 255
 806:	81 e0       	ldi	r24, 0x01	; 1
 808:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_VidSetPortValue>
	/* Set Interrupt pin to input */
	DIO_VidSetPinDirection(PORTD, PIN2, INPUT);
 80c:	40 e0       	ldi	r20, 0x00	; 0
 80e:	62 e0       	ldi	r22, 0x02	; 2
 810:	83 e0       	ldi	r24, 0x03	; 3
 812:	0e 94 69 00 	call	0xd2	; 0xd2 <DIO_VidSetPinDirection>
	/* active pull up resistor for encoder pin */
	// DIO_VidSetPinValue(PORTD, PIN2, HIGH);
	DIO_VidSetPinDirection(PORTD, PIN5, OUTPUT);
 816:	4f ef       	ldi	r20, 0xFF	; 255
 818:	65 e0       	ldi	r22, 0x05	; 5
 81a:	83 e0       	ldi	r24, 0x03	; 3
 81c:	0e 94 69 00 	call	0xd2	; 0xd2 <DIO_VidSetPinDirection>

		
	/* INT0 initialization for rising edge */
	INT0_Init(Rising_Edge);
 820:	83 e0       	ldi	r24, 0x03	; 3
 822:	0e 94 9b 01 	call	0x336	; 0x336 <INT0_Init>

	/* set timer_0 prescaler to 1024 and init ticks to 28 to have 0.5 s sampling time (OVF = 0.0218 s) */
	TIM0_OVF_Init(TIMER_PRESCALER_1024, Init_ticks);
 826:	64 e6       	ldi	r22, 0x64	; 100
 828:	85 e0       	ldi	r24, 0x05	; 5
 82a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <TIM0_OVF_Init>
		
	LCD_vidInit();
 82e:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <LCD_vidInit>
	LCD_vidWriteString("SET:GOAL:CURRENT", 16);
 832:	60 e1       	ldi	r22, 0x10	; 16
 834:	80 e6       	ldi	r24, 0x60	; 96
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	0e 94 51 02 	call	0x4a2	; 0x4a2 <LCD_vidWriteString>
 83c:	08 95       	ret

0000083e <main>:
uint16_t Set_Motor_Speed (uint16_t Req_Speed , uint16_t Motor_Speed );
void init_system();

int main(void)
{
	init_system();
 83e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <init_system>
	
    while (1) 
    {
		if (!DIO_u8GetPinValue(PORTB, PIN0))
 842:	60 e0       	ldi	r22, 0x00	; 0
 844:	81 e0       	ldi	r24, 0x01	; 1
 846:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPinValue>
 84a:	81 11       	cpse	r24, r1
 84c:	0f c0       	rjmp	.+30     	; 0x86c <__stack+0xd>
		{
			while(!DIO_u8GetPinValue(PORTB, PIN0));
 84e:	60 e0       	ldi	r22, 0x00	; 0
 850:	81 e0       	ldi	r24, 0x01	; 1
 852:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPinValue>
 856:	88 23       	and	r24, r24
 858:	d1 f3       	breq	.-12     	; 0x84e <main+0x10>
			GOAL = input_speed;
 85a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <input_speed>
 85e:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <input_speed+0x1>
 862:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__data_end+0x1>
 866:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__data_end>
 86a:	2d c0       	rjmp	.+90     	; 0x8c6 <__stack+0x67>
		}
		else if (!DIO_u8GetPinValue(PORTB, PIN1))
 86c:	61 e0       	ldi	r22, 0x01	; 1
 86e:	81 e0       	ldi	r24, 0x01	; 1
 870:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPinValue>
 874:	81 11       	cpse	r24, r1
 876:	10 c0       	rjmp	.+32     	; 0x898 <__stack+0x39>
		{
			while(!DIO_u8GetPinValue(PORTB, PIN1));
 878:	61 e0       	ldi	r22, 0x01	; 1
 87a:	81 e0       	ldi	r24, 0x01	; 1
 87c:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPinValue>
 880:	88 23       	and	r24, r24
 882:	d1 f3       	breq	.-12     	; 0x878 <__stack+0x19>
			input_speed +=10;
 884:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <input_speed>
 888:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <input_speed+0x1>
 88c:	0a 96       	adiw	r24, 0x0a	; 10
 88e:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <input_speed+0x1>
 892:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <input_speed>
 896:	17 c0       	rjmp	.+46     	; 0x8c6 <__stack+0x67>
		}
		else if (!DIO_u8GetPinValue(PORTB, PIN2))
 898:	62 e0       	ldi	r22, 0x02	; 2
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPinValue>
 8a0:	81 11       	cpse	r24, r1
 8a2:	11 c0       	rjmp	.+34     	; 0x8c6 <__stack+0x67>
		{
			while(!DIO_u8GetPinValue(PORTB, PIN2));
 8a4:	62 e0       	ldi	r22, 0x02	; 2
 8a6:	81 e0       	ldi	r24, 0x01	; 1
 8a8:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPinValue>
 8ac:	88 23       	and	r24, r24
 8ae:	d1 f3       	breq	.-12     	; 0x8a4 <__stack+0x45>
			if (input_speed > 0)
 8b0:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <input_speed>
 8b4:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <input_speed+0x1>
 8b8:	00 97       	sbiw	r24, 0x00	; 0
 8ba:	29 f0       	breq	.+10     	; 0x8c6 <__stack+0x67>
			{
				input_speed -=10;
 8bc:	0a 97       	sbiw	r24, 0x0a	; 10
 8be:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <input_speed+0x1>
 8c2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <input_speed>
			{
				input_speed = 0;
			}
			
		}
		Gotoxy(1,0);
 8c6:	60 e0       	ldi	r22, 0x00	; 0
 8c8:	81 e0       	ldi	r24, 0x01	; 1
 8ca:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <Gotoxy>
		LCD_vidWriteNumber(input_speed);
 8ce:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <input_speed>
 8d2:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <input_speed+0x1>
 8d6:	80 e0       	ldi	r24, 0x00	; 0
 8d8:	90 e0       	ldi	r25, 0x00	; 0
 8da:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_vidWriteNumber>
		Gotoxy(1,4);
 8de:	64 e0       	ldi	r22, 0x04	; 4
 8e0:	81 e0       	ldi	r24, 0x01	; 1
 8e2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <Gotoxy>
		LCD_vidWriteNumber(GOAL);
 8e6:	60 91 72 00 	lds	r22, 0x0072	; 0x800072 <__data_end>
 8ea:	70 91 73 00 	lds	r23, 0x0073	; 0x800073 <__data_end+0x1>
 8ee:	80 e0       	ldi	r24, 0x00	; 0
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_vidWriteNumber>
		Gotoxy(1,10);
 8f6:	6a e0       	ldi	r22, 0x0A	; 10
 8f8:	81 e0       	ldi	r24, 0x01	; 1
 8fa:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <Gotoxy>
		LCD_vidWriteNumber(speed_rpm);
 8fe:	60 91 80 00 	lds	r22, 0x0080	; 0x800080 <speed_rpm>
 902:	70 91 81 00 	lds	r23, 0x0081	; 0x800081 <speed_rpm+0x1>
 906:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <speed_rpm+0x2>
 90a:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <speed_rpm+0x3>
 90e:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_vidWriteNumber>
		
    }
 912:	97 cf       	rjmp	.-210    	; 0x842 <main+0x4>

00000914 <Fast_PWM1_init>:

void Fast_PWM1_init(uint8_t prescaler , uint16_t value , uint8_t pin)
{


	switch(pin)
 914:	44 23       	and	r20, r20
 916:	19 f0       	breq	.+6      	; 0x91e <Fast_PWM1_init+0xa>
 918:	41 30       	cpi	r20, 0x01	; 1
 91a:	b1 f0       	breq	.+44     	; 0x948 <Fast_PWM1_init+0x34>
 91c:	29 c0       	rjmp	.+82     	; 0x970 <Fast_PWM1_init+0x5c>
	{
	case OC1A :
		CLR_BIT(TCCR1A,WGM10);
 91e:	9f b5       	in	r25, 0x2f	; 47
 920:	9e 7f       	andi	r25, 0xFE	; 254
 922:	9f bd       	out	0x2f, r25	; 47
		SET_BIT(TCCR1A,WGM11);
 924:	9f b5       	in	r25, 0x2f	; 47
 926:	92 60       	ori	r25, 0x02	; 2
 928:	9f bd       	out	0x2f, r25	; 47

		SET_BIT(TCCR1B,WGM12);
 92a:	9e b5       	in	r25, 0x2e	; 46
 92c:	98 60       	ori	r25, 0x08	; 8
 92e:	9e bd       	out	0x2e, r25	; 46
		SET_BIT(TCCR1B,WGM13);
 930:	9e b5       	in	r25, 0x2e	; 46
 932:	90 61       	ori	r25, 0x10	; 16
 934:	9e bd       	out	0x2e, r25	; 46

		CLR_BIT(TCCR1A,COM1A0);
 936:	9f b5       	in	r25, 0x2f	; 47
 938:	9f 7b       	andi	r25, 0xBF	; 191
 93a:	9f bd       	out	0x2f, r25	; 47
		SET_BIT(TCCR1A,COM1A1);
 93c:	9f b5       	in	r25, 0x2f	; 47
 93e:	90 68       	ori	r25, 0x80	; 128
 940:	9f bd       	out	0x2f, r25	; 47

		OCR1A = value ;
 942:	7b bd       	out	0x2b, r23	; 43
 944:	6a bd       	out	0x2a, r22	; 42

		break;
 946:	14 c0       	rjmp	.+40     	; 0x970 <Fast_PWM1_init+0x5c>
	case OC1B :
		CLR_BIT(TCCR1A,WGM10);
 948:	9f b5       	in	r25, 0x2f	; 47
 94a:	9e 7f       	andi	r25, 0xFE	; 254
 94c:	9f bd       	out	0x2f, r25	; 47
		SET_BIT(TCCR1A,WGM11);
 94e:	9f b5       	in	r25, 0x2f	; 47
 950:	92 60       	ori	r25, 0x02	; 2
 952:	9f bd       	out	0x2f, r25	; 47

		SET_BIT(TCCR1B,WGM12);
 954:	9e b5       	in	r25, 0x2e	; 46
 956:	98 60       	ori	r25, 0x08	; 8
 958:	9e bd       	out	0x2e, r25	; 46
		SET_BIT(TCCR1B,WGM13);
 95a:	9e b5       	in	r25, 0x2e	; 46
 95c:	90 61       	ori	r25, 0x10	; 16
 95e:	9e bd       	out	0x2e, r25	; 46

		OCR1B = value ;
 960:	79 bd       	out	0x29, r23	; 41
 962:	68 bd       	out	0x28, r22	; 40

		CLR_BIT(TCCR1A,COM1B0);
 964:	9f b5       	in	r25, 0x2f	; 47
 966:	9f 7e       	andi	r25, 0xEF	; 239
 968:	9f bd       	out	0x2f, r25	; 47
		SET_BIT(TCCR1A,COM1B1);
 96a:	9f b5       	in	r25, 0x2f	; 47
 96c:	90 62       	ori	r25, 0x20	; 32
 96e:	9f bd       	out	0x2f, r25	; 47
	}



	/* set prescaler */
	switch (prescaler)
 970:	83 30       	cpi	r24, 0x03	; 3
 972:	f9 f0       	breq	.+62     	; 0x9b2 <Fast_PWM1_init+0x9e>
 974:	28 f4       	brcc	.+10     	; 0x980 <Fast_PWM1_init+0x6c>
 976:	81 30       	cpi	r24, 0x01	; 1
 978:	41 f0       	breq	.+16     	; 0x98a <Fast_PWM1_init+0x76>
 97a:	82 30       	cpi	r24, 0x02	; 2
 97c:	81 f0       	breq	.+32     	; 0x99e <Fast_PWM1_init+0x8a>
 97e:	36 c0       	rjmp	.+108    	; 0x9ec <Fast_PWM1_init+0xd8>
 980:	84 30       	cpi	r24, 0x04	; 4
 982:	09 f1       	breq	.+66     	; 0x9c6 <Fast_PWM1_init+0xb2>
 984:	85 30       	cpi	r24, 0x05	; 5
 986:	49 f1       	breq	.+82     	; 0x9da <Fast_PWM1_init+0xc6>
 988:	31 c0       	rjmp	.+98     	; 0x9ec <Fast_PWM1_init+0xd8>
		{
		case 1 :
			SET_BIT(TCCR1B,CS10);
 98a:	8e b5       	in	r24, 0x2e	; 46
 98c:	81 60       	ori	r24, 0x01	; 1
 98e:	8e bd       	out	0x2e, r24	; 46
			CLR_BIT(TCCR1B,CS11);
 990:	8e b5       	in	r24, 0x2e	; 46
 992:	8d 7f       	andi	r24, 0xFD	; 253
 994:	8e bd       	out	0x2e, r24	; 46
			CLR_BIT(TCCR1B,CS12);
 996:	8e b5       	in	r24, 0x2e	; 46
 998:	8b 7f       	andi	r24, 0xFB	; 251
 99a:	8e bd       	out	0x2e, r24	; 46
			break;
 99c:	27 c0       	rjmp	.+78     	; 0x9ec <Fast_PWM1_init+0xd8>
		case 2 :
			CLR_BIT(TCCR1B,CS00);
 99e:	8e b5       	in	r24, 0x2e	; 46
 9a0:	8e 7f       	andi	r24, 0xFE	; 254
 9a2:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B,CS11);
 9a4:	8e b5       	in	r24, 0x2e	; 46
 9a6:	82 60       	ori	r24, 0x02	; 2
 9a8:	8e bd       	out	0x2e, r24	; 46
			CLR_BIT(TCCR1B,CS12);
 9aa:	8e b5       	in	r24, 0x2e	; 46
 9ac:	8b 7f       	andi	r24, 0xFB	; 251
 9ae:	8e bd       	out	0x2e, r24	; 46
			break;
 9b0:	1d c0       	rjmp	.+58     	; 0x9ec <Fast_PWM1_init+0xd8>
		case 3 :
			SET_BIT(TCCR1B,CS00);
 9b2:	8e b5       	in	r24, 0x2e	; 46
 9b4:	81 60       	ori	r24, 0x01	; 1
 9b6:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B,CS11);
 9b8:	8e b5       	in	r24, 0x2e	; 46
 9ba:	82 60       	ori	r24, 0x02	; 2
 9bc:	8e bd       	out	0x2e, r24	; 46
			CLR_BIT(TCCR1B,CS12);
 9be:	8e b5       	in	r24, 0x2e	; 46
 9c0:	8b 7f       	andi	r24, 0xFB	; 251
 9c2:	8e bd       	out	0x2e, r24	; 46
			break;
 9c4:	13 c0       	rjmp	.+38     	; 0x9ec <Fast_PWM1_init+0xd8>

		case 4 :
			CLR_BIT(TCCR1B,CS00);
 9c6:	8e b5       	in	r24, 0x2e	; 46
 9c8:	8e 7f       	andi	r24, 0xFE	; 254
 9ca:	8e bd       	out	0x2e, r24	; 46
			CLR_BIT(TCCR1B,CS11);
 9cc:	8e b5       	in	r24, 0x2e	; 46
 9ce:	8d 7f       	andi	r24, 0xFD	; 253
 9d0:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B,CS12);
 9d2:	8e b5       	in	r24, 0x2e	; 46
 9d4:	84 60       	ori	r24, 0x04	; 4
 9d6:	8e bd       	out	0x2e, r24	; 46
			break;
 9d8:	09 c0       	rjmp	.+18     	; 0x9ec <Fast_PWM1_init+0xd8>

		case 5 :
			SET_BIT(TCCR1B,CS00);
 9da:	8e b5       	in	r24, 0x2e	; 46
 9dc:	81 60       	ori	r24, 0x01	; 1
 9de:	8e bd       	out	0x2e, r24	; 46
			CLR_BIT(TCCR1B,CS11);
 9e0:	8e b5       	in	r24, 0x2e	; 46
 9e2:	8d 7f       	andi	r24, 0xFD	; 253
 9e4:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B,CS12);
 9e6:	8e b5       	in	r24, 0x2e	; 46
 9e8:	84 60       	ori	r24, 0x04	; 4
 9ea:	8e bd       	out	0x2e, r24	; 46
			break;
		}

	/* set top value*/
	ICR1 = 1023 ;
 9ec:	8f ef       	ldi	r24, 0xFF	; 255
 9ee:	93 e0       	ldi	r25, 0x03	; 3
 9f0:	97 bd       	out	0x27, r25	; 39
 9f2:	86 bd       	out	0x26, r24	; 38
 9f4:	08 95       	ret

000009f6 <TIM0_OVF_Init>:

void TIM0_OVF_Init(uint8_t prescaler, uint8_t Init_Ticks)
{

	/* set normal mode */
	CLR_BIT(TCCR0,WGM00);
 9f6:	93 b7       	in	r25, 0x33	; 51
 9f8:	9f 7b       	andi	r25, 0xBF	; 191
 9fa:	93 bf       	out	0x33, r25	; 51
	CLR_BIT(TCCR0,WGM01);
 9fc:	93 b7       	in	r25, 0x33	; 51
 9fe:	97 7f       	andi	r25, 0xF7	; 247
 a00:	93 bf       	out	0x33, r25	; 51

	/* set timer count */
	TCNT0 = Init_Ticks ;
 a02:	62 bf       	out	0x32, r22	; 50

	/* set prescaller */

	switch (prescaler)
 a04:	83 30       	cpi	r24, 0x03	; 3
 a06:	f9 f0       	breq	.+62     	; 0xa46 <TIM0_OVF_Init+0x50>
 a08:	28 f4       	brcc	.+10     	; 0xa14 <TIM0_OVF_Init+0x1e>
 a0a:	81 30       	cpi	r24, 0x01	; 1
 a0c:	41 f0       	breq	.+16     	; 0xa1e <TIM0_OVF_Init+0x28>
 a0e:	82 30       	cpi	r24, 0x02	; 2
 a10:	81 f0       	breq	.+32     	; 0xa32 <TIM0_OVF_Init+0x3c>
 a12:	36 c0       	rjmp	.+108    	; 0xa80 <TIM0_OVF_Init+0x8a>
 a14:	84 30       	cpi	r24, 0x04	; 4
 a16:	09 f1       	breq	.+66     	; 0xa5a <TIM0_OVF_Init+0x64>
 a18:	85 30       	cpi	r24, 0x05	; 5
 a1a:	49 f1       	breq	.+82     	; 0xa6e <TIM0_OVF_Init+0x78>
 a1c:	31 c0       	rjmp	.+98     	; 0xa80 <TIM0_OVF_Init+0x8a>
	{
		case 1 :
		SET_BIT(TCCR0,CS00);
 a1e:	83 b7       	in	r24, 0x33	; 51
 a20:	81 60       	ori	r24, 0x01	; 1
 a22:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0,CS01);
 a24:	83 b7       	in	r24, 0x33	; 51
 a26:	8d 7f       	andi	r24, 0xFD	; 253
 a28:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0,CS02);
 a2a:	83 b7       	in	r24, 0x33	; 51
 a2c:	8b 7f       	andi	r24, 0xFB	; 251
 a2e:	83 bf       	out	0x33, r24	; 51
		break;
 a30:	27 c0       	rjmp	.+78     	; 0xa80 <TIM0_OVF_Init+0x8a>
		
		case 2 :
		CLR_BIT(TCCR0,CS00);
 a32:	83 b7       	in	r24, 0x33	; 51
 a34:	8e 7f       	andi	r24, 0xFE	; 254
 a36:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0,CS01);
 a38:	83 b7       	in	r24, 0x33	; 51
 a3a:	82 60       	ori	r24, 0x02	; 2
 a3c:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0,CS02);
 a3e:	83 b7       	in	r24, 0x33	; 51
 a40:	8b 7f       	andi	r24, 0xFB	; 251
 a42:	83 bf       	out	0x33, r24	; 51
		break;
 a44:	1d c0       	rjmp	.+58     	; 0xa80 <TIM0_OVF_Init+0x8a>
		
		case 3 :
		SET_BIT(TCCR0,CS00);
 a46:	83 b7       	in	r24, 0x33	; 51
 a48:	81 60       	ori	r24, 0x01	; 1
 a4a:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0,CS01);
 a4c:	83 b7       	in	r24, 0x33	; 51
 a4e:	82 60       	ori	r24, 0x02	; 2
 a50:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0,CS02);
 a52:	83 b7       	in	r24, 0x33	; 51
 a54:	8b 7f       	andi	r24, 0xFB	; 251
 a56:	83 bf       	out	0x33, r24	; 51
		break;
 a58:	13 c0       	rjmp	.+38     	; 0xa80 <TIM0_OVF_Init+0x8a>

		case 4 :
		CLR_BIT(TCCR0,CS00);
 a5a:	83 b7       	in	r24, 0x33	; 51
 a5c:	8e 7f       	andi	r24, 0xFE	; 254
 a5e:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0,CS01);
 a60:	83 b7       	in	r24, 0x33	; 51
 a62:	8d 7f       	andi	r24, 0xFD	; 253
 a64:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0,CS02);
 a66:	83 b7       	in	r24, 0x33	; 51
 a68:	84 60       	ori	r24, 0x04	; 4
 a6a:	83 bf       	out	0x33, r24	; 51
		break;
 a6c:	09 c0       	rjmp	.+18     	; 0xa80 <TIM0_OVF_Init+0x8a>

		case 5 :
		SET_BIT(TCCR0,CS00);
 a6e:	83 b7       	in	r24, 0x33	; 51
 a70:	81 60       	ori	r24, 0x01	; 1
 a72:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0,CS01);
 a74:	83 b7       	in	r24, 0x33	; 51
 a76:	8d 7f       	andi	r24, 0xFD	; 253
 a78:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0,CS02);
 a7a:	83 b7       	in	r24, 0x33	; 51
 a7c:	84 60       	ori	r24, 0x04	; 4
 a7e:	83 bf       	out	0x33, r24	; 51
		break;
	}

	SET_BIT(TIMSK,TOIE0);
 a80:	89 b7       	in	r24, 0x39	; 57
 a82:	81 60       	ori	r24, 0x01	; 1
 a84:	89 bf       	out	0x39, r24	; 57
	sei();
 a86:	78 94       	sei
 a88:	08 95       	ret

00000a8a <__subsf3>:
 a8a:	50 58       	subi	r21, 0x80	; 128

00000a8c <__addsf3>:
 a8c:	bb 27       	eor	r27, r27
 a8e:	aa 27       	eor	r26, r26
 a90:	0e 94 5d 05 	call	0xaba	; 0xaba <__addsf3x>
 a94:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__fp_round>
 a98:	0e 94 a0 06 	call	0xd40	; 0xd40 <__fp_pscA>
 a9c:	38 f0       	brcs	.+14     	; 0xaac <__addsf3+0x20>
 a9e:	0e 94 a7 06 	call	0xd4e	; 0xd4e <__fp_pscB>
 aa2:	20 f0       	brcs	.+8      	; 0xaac <__addsf3+0x20>
 aa4:	39 f4       	brne	.+14     	; 0xab4 <__addsf3+0x28>
 aa6:	9f 3f       	cpi	r25, 0xFF	; 255
 aa8:	19 f4       	brne	.+6      	; 0xab0 <__addsf3+0x24>
 aaa:	26 f4       	brtc	.+8      	; 0xab4 <__addsf3+0x28>
 aac:	0c 94 9d 06 	jmp	0xd3a	; 0xd3a <__fp_nan>
 ab0:	0e f4       	brtc	.+2      	; 0xab4 <__addsf3+0x28>
 ab2:	e0 95       	com	r30
 ab4:	e7 fb       	bst	r30, 7
 ab6:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_inf>

00000aba <__addsf3x>:
 aba:	e9 2f       	mov	r30, r25
 abc:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__fp_split3>
 ac0:	58 f3       	brcs	.-42     	; 0xa98 <__addsf3+0xc>
 ac2:	ba 17       	cp	r27, r26
 ac4:	62 07       	cpc	r22, r18
 ac6:	73 07       	cpc	r23, r19
 ac8:	84 07       	cpc	r24, r20
 aca:	95 07       	cpc	r25, r21
 acc:	20 f0       	brcs	.+8      	; 0xad6 <__addsf3x+0x1c>
 ace:	79 f4       	brne	.+30     	; 0xaee <__addsf3x+0x34>
 ad0:	a6 f5       	brtc	.+104    	; 0xb3a <__addsf3x+0x80>
 ad2:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__fp_zero>
 ad6:	0e f4       	brtc	.+2      	; 0xada <__addsf3x+0x20>
 ad8:	e0 95       	com	r30
 ada:	0b 2e       	mov	r0, r27
 adc:	ba 2f       	mov	r27, r26
 ade:	a0 2d       	mov	r26, r0
 ae0:	0b 01       	movw	r0, r22
 ae2:	b9 01       	movw	r22, r18
 ae4:	90 01       	movw	r18, r0
 ae6:	0c 01       	movw	r0, r24
 ae8:	ca 01       	movw	r24, r20
 aea:	a0 01       	movw	r20, r0
 aec:	11 24       	eor	r1, r1
 aee:	ff 27       	eor	r31, r31
 af0:	59 1b       	sub	r21, r25
 af2:	99 f0       	breq	.+38     	; 0xb1a <__addsf3x+0x60>
 af4:	59 3f       	cpi	r21, 0xF9	; 249
 af6:	50 f4       	brcc	.+20     	; 0xb0c <__addsf3x+0x52>
 af8:	50 3e       	cpi	r21, 0xE0	; 224
 afa:	68 f1       	brcs	.+90     	; 0xb56 <__addsf3x+0x9c>
 afc:	1a 16       	cp	r1, r26
 afe:	f0 40       	sbci	r31, 0x00	; 0
 b00:	a2 2f       	mov	r26, r18
 b02:	23 2f       	mov	r18, r19
 b04:	34 2f       	mov	r19, r20
 b06:	44 27       	eor	r20, r20
 b08:	58 5f       	subi	r21, 0xF8	; 248
 b0a:	f3 cf       	rjmp	.-26     	; 0xaf2 <__addsf3x+0x38>
 b0c:	46 95       	lsr	r20
 b0e:	37 95       	ror	r19
 b10:	27 95       	ror	r18
 b12:	a7 95       	ror	r26
 b14:	f0 40       	sbci	r31, 0x00	; 0
 b16:	53 95       	inc	r21
 b18:	c9 f7       	brne	.-14     	; 0xb0c <__addsf3x+0x52>
 b1a:	7e f4       	brtc	.+30     	; 0xb3a <__addsf3x+0x80>
 b1c:	1f 16       	cp	r1, r31
 b1e:	ba 0b       	sbc	r27, r26
 b20:	62 0b       	sbc	r22, r18
 b22:	73 0b       	sbc	r23, r19
 b24:	84 0b       	sbc	r24, r20
 b26:	ba f0       	brmi	.+46     	; 0xb56 <__addsf3x+0x9c>
 b28:	91 50       	subi	r25, 0x01	; 1
 b2a:	a1 f0       	breq	.+40     	; 0xb54 <__addsf3x+0x9a>
 b2c:	ff 0f       	add	r31, r31
 b2e:	bb 1f       	adc	r27, r27
 b30:	66 1f       	adc	r22, r22
 b32:	77 1f       	adc	r23, r23
 b34:	88 1f       	adc	r24, r24
 b36:	c2 f7       	brpl	.-16     	; 0xb28 <__addsf3x+0x6e>
 b38:	0e c0       	rjmp	.+28     	; 0xb56 <__addsf3x+0x9c>
 b3a:	ba 0f       	add	r27, r26
 b3c:	62 1f       	adc	r22, r18
 b3e:	73 1f       	adc	r23, r19
 b40:	84 1f       	adc	r24, r20
 b42:	48 f4       	brcc	.+18     	; 0xb56 <__addsf3x+0x9c>
 b44:	87 95       	ror	r24
 b46:	77 95       	ror	r23
 b48:	67 95       	ror	r22
 b4a:	b7 95       	ror	r27
 b4c:	f7 95       	ror	r31
 b4e:	9e 3f       	cpi	r25, 0xFE	; 254
 b50:	08 f0       	brcs	.+2      	; 0xb54 <__addsf3x+0x9a>
 b52:	b0 cf       	rjmp	.-160    	; 0xab4 <__addsf3+0x28>
 b54:	93 95       	inc	r25
 b56:	88 0f       	add	r24, r24
 b58:	08 f0       	brcs	.+2      	; 0xb5c <__addsf3x+0xa2>
 b5a:	99 27       	eor	r25, r25
 b5c:	ee 0f       	add	r30, r30
 b5e:	97 95       	ror	r25
 b60:	87 95       	ror	r24
 b62:	08 95       	ret

00000b64 <__divsf3>:
 b64:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__divsf3x>
 b68:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__fp_round>
 b6c:	0e 94 a7 06 	call	0xd4e	; 0xd4e <__fp_pscB>
 b70:	58 f0       	brcs	.+22     	; 0xb88 <__divsf3+0x24>
 b72:	0e 94 a0 06 	call	0xd40	; 0xd40 <__fp_pscA>
 b76:	40 f0       	brcs	.+16     	; 0xb88 <__divsf3+0x24>
 b78:	29 f4       	brne	.+10     	; 0xb84 <__divsf3+0x20>
 b7a:	5f 3f       	cpi	r21, 0xFF	; 255
 b7c:	29 f0       	breq	.+10     	; 0xb88 <__divsf3+0x24>
 b7e:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_inf>
 b82:	51 11       	cpse	r21, r1
 b84:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__fp_szero>
 b88:	0c 94 9d 06 	jmp	0xd3a	; 0xd3a <__fp_nan>

00000b8c <__divsf3x>:
 b8c:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__fp_split3>
 b90:	68 f3       	brcs	.-38     	; 0xb6c <__divsf3+0x8>

00000b92 <__divsf3_pse>:
 b92:	99 23       	and	r25, r25
 b94:	b1 f3       	breq	.-20     	; 0xb82 <__divsf3+0x1e>
 b96:	55 23       	and	r21, r21
 b98:	91 f3       	breq	.-28     	; 0xb7e <__divsf3+0x1a>
 b9a:	95 1b       	sub	r25, r21
 b9c:	55 0b       	sbc	r21, r21
 b9e:	bb 27       	eor	r27, r27
 ba0:	aa 27       	eor	r26, r26
 ba2:	62 17       	cp	r22, r18
 ba4:	73 07       	cpc	r23, r19
 ba6:	84 07       	cpc	r24, r20
 ba8:	38 f0       	brcs	.+14     	; 0xbb8 <__divsf3_pse+0x26>
 baa:	9f 5f       	subi	r25, 0xFF	; 255
 bac:	5f 4f       	sbci	r21, 0xFF	; 255
 bae:	22 0f       	add	r18, r18
 bb0:	33 1f       	adc	r19, r19
 bb2:	44 1f       	adc	r20, r20
 bb4:	aa 1f       	adc	r26, r26
 bb6:	a9 f3       	breq	.-22     	; 0xba2 <__divsf3_pse+0x10>
 bb8:	35 d0       	rcall	.+106    	; 0xc24 <__divsf3_pse+0x92>
 bba:	0e 2e       	mov	r0, r30
 bbc:	3a f0       	brmi	.+14     	; 0xbcc <__divsf3_pse+0x3a>
 bbe:	e0 e8       	ldi	r30, 0x80	; 128
 bc0:	32 d0       	rcall	.+100    	; 0xc26 <__divsf3_pse+0x94>
 bc2:	91 50       	subi	r25, 0x01	; 1
 bc4:	50 40       	sbci	r21, 0x00	; 0
 bc6:	e6 95       	lsr	r30
 bc8:	00 1c       	adc	r0, r0
 bca:	ca f7       	brpl	.-14     	; 0xbbe <__divsf3_pse+0x2c>
 bcc:	2b d0       	rcall	.+86     	; 0xc24 <__divsf3_pse+0x92>
 bce:	fe 2f       	mov	r31, r30
 bd0:	29 d0       	rcall	.+82     	; 0xc24 <__divsf3_pse+0x92>
 bd2:	66 0f       	add	r22, r22
 bd4:	77 1f       	adc	r23, r23
 bd6:	88 1f       	adc	r24, r24
 bd8:	bb 1f       	adc	r27, r27
 bda:	26 17       	cp	r18, r22
 bdc:	37 07       	cpc	r19, r23
 bde:	48 07       	cpc	r20, r24
 be0:	ab 07       	cpc	r26, r27
 be2:	b0 e8       	ldi	r27, 0x80	; 128
 be4:	09 f0       	breq	.+2      	; 0xbe8 <__divsf3_pse+0x56>
 be6:	bb 0b       	sbc	r27, r27
 be8:	80 2d       	mov	r24, r0
 bea:	bf 01       	movw	r22, r30
 bec:	ff 27       	eor	r31, r31
 bee:	93 58       	subi	r25, 0x83	; 131
 bf0:	5f 4f       	sbci	r21, 0xFF	; 255
 bf2:	3a f0       	brmi	.+14     	; 0xc02 <__divsf3_pse+0x70>
 bf4:	9e 3f       	cpi	r25, 0xFE	; 254
 bf6:	51 05       	cpc	r21, r1
 bf8:	78 f0       	brcs	.+30     	; 0xc18 <__divsf3_pse+0x86>
 bfa:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_inf>
 bfe:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__fp_szero>
 c02:	5f 3f       	cpi	r21, 0xFF	; 255
 c04:	e4 f3       	brlt	.-8      	; 0xbfe <__divsf3_pse+0x6c>
 c06:	98 3e       	cpi	r25, 0xE8	; 232
 c08:	d4 f3       	brlt	.-12     	; 0xbfe <__divsf3_pse+0x6c>
 c0a:	86 95       	lsr	r24
 c0c:	77 95       	ror	r23
 c0e:	67 95       	ror	r22
 c10:	b7 95       	ror	r27
 c12:	f7 95       	ror	r31
 c14:	9f 5f       	subi	r25, 0xFF	; 255
 c16:	c9 f7       	brne	.-14     	; 0xc0a <__divsf3_pse+0x78>
 c18:	88 0f       	add	r24, r24
 c1a:	91 1d       	adc	r25, r1
 c1c:	96 95       	lsr	r25
 c1e:	87 95       	ror	r24
 c20:	97 f9       	bld	r25, 7
 c22:	08 95       	ret
 c24:	e1 e0       	ldi	r30, 0x01	; 1
 c26:	66 0f       	add	r22, r22
 c28:	77 1f       	adc	r23, r23
 c2a:	88 1f       	adc	r24, r24
 c2c:	bb 1f       	adc	r27, r27
 c2e:	62 17       	cp	r22, r18
 c30:	73 07       	cpc	r23, r19
 c32:	84 07       	cpc	r24, r20
 c34:	ba 07       	cpc	r27, r26
 c36:	20 f0       	brcs	.+8      	; 0xc40 <__divsf3_pse+0xae>
 c38:	62 1b       	sub	r22, r18
 c3a:	73 0b       	sbc	r23, r19
 c3c:	84 0b       	sbc	r24, r20
 c3e:	ba 0b       	sbc	r27, r26
 c40:	ee 1f       	adc	r30, r30
 c42:	88 f7       	brcc	.-30     	; 0xc26 <__divsf3_pse+0x94>
 c44:	e0 95       	com	r30
 c46:	08 95       	ret

00000c48 <__fixsfsi>:
 c48:	0e 94 2b 06 	call	0xc56	; 0xc56 <__fixunssfsi>
 c4c:	68 94       	set
 c4e:	b1 11       	cpse	r27, r1
 c50:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__fp_szero>
 c54:	08 95       	ret

00000c56 <__fixunssfsi>:
 c56:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__fp_splitA>
 c5a:	88 f0       	brcs	.+34     	; 0xc7e <__fixunssfsi+0x28>
 c5c:	9f 57       	subi	r25, 0x7F	; 127
 c5e:	98 f0       	brcs	.+38     	; 0xc86 <__fixunssfsi+0x30>
 c60:	b9 2f       	mov	r27, r25
 c62:	99 27       	eor	r25, r25
 c64:	b7 51       	subi	r27, 0x17	; 23
 c66:	b0 f0       	brcs	.+44     	; 0xc94 <__fixunssfsi+0x3e>
 c68:	e1 f0       	breq	.+56     	; 0xca2 <__fixunssfsi+0x4c>
 c6a:	66 0f       	add	r22, r22
 c6c:	77 1f       	adc	r23, r23
 c6e:	88 1f       	adc	r24, r24
 c70:	99 1f       	adc	r25, r25
 c72:	1a f0       	brmi	.+6      	; 0xc7a <__fixunssfsi+0x24>
 c74:	ba 95       	dec	r27
 c76:	c9 f7       	brne	.-14     	; 0xc6a <__fixunssfsi+0x14>
 c78:	14 c0       	rjmp	.+40     	; 0xca2 <__fixunssfsi+0x4c>
 c7a:	b1 30       	cpi	r27, 0x01	; 1
 c7c:	91 f0       	breq	.+36     	; 0xca2 <__fixunssfsi+0x4c>
 c7e:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__fp_zero>
 c82:	b1 e0       	ldi	r27, 0x01	; 1
 c84:	08 95       	ret
 c86:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__fp_zero>
 c8a:	67 2f       	mov	r22, r23
 c8c:	78 2f       	mov	r23, r24
 c8e:	88 27       	eor	r24, r24
 c90:	b8 5f       	subi	r27, 0xF8	; 248
 c92:	39 f0       	breq	.+14     	; 0xca2 <__fixunssfsi+0x4c>
 c94:	b9 3f       	cpi	r27, 0xF9	; 249
 c96:	cc f3       	brlt	.-14     	; 0xc8a <__fixunssfsi+0x34>
 c98:	86 95       	lsr	r24
 c9a:	77 95       	ror	r23
 c9c:	67 95       	ror	r22
 c9e:	b3 95       	inc	r27
 ca0:	d9 f7       	brne	.-10     	; 0xc98 <__fixunssfsi+0x42>
 ca2:	3e f4       	brtc	.+14     	; 0xcb2 <__fixunssfsi+0x5c>
 ca4:	90 95       	com	r25
 ca6:	80 95       	com	r24
 ca8:	70 95       	com	r23
 caa:	61 95       	neg	r22
 cac:	7f 4f       	sbci	r23, 0xFF	; 255
 cae:	8f 4f       	sbci	r24, 0xFF	; 255
 cb0:	9f 4f       	sbci	r25, 0xFF	; 255
 cb2:	08 95       	ret

00000cb4 <__floatunsisf>:
 cb4:	e8 94       	clt
 cb6:	09 c0       	rjmp	.+18     	; 0xcca <__floatsisf+0x12>

00000cb8 <__floatsisf>:
 cb8:	97 fb       	bst	r25, 7
 cba:	3e f4       	brtc	.+14     	; 0xcca <__floatsisf+0x12>
 cbc:	90 95       	com	r25
 cbe:	80 95       	com	r24
 cc0:	70 95       	com	r23
 cc2:	61 95       	neg	r22
 cc4:	7f 4f       	sbci	r23, 0xFF	; 255
 cc6:	8f 4f       	sbci	r24, 0xFF	; 255
 cc8:	9f 4f       	sbci	r25, 0xFF	; 255
 cca:	99 23       	and	r25, r25
 ccc:	a9 f0       	breq	.+42     	; 0xcf8 <__floatsisf+0x40>
 cce:	f9 2f       	mov	r31, r25
 cd0:	96 e9       	ldi	r25, 0x96	; 150
 cd2:	bb 27       	eor	r27, r27
 cd4:	93 95       	inc	r25
 cd6:	f6 95       	lsr	r31
 cd8:	87 95       	ror	r24
 cda:	77 95       	ror	r23
 cdc:	67 95       	ror	r22
 cde:	b7 95       	ror	r27
 ce0:	f1 11       	cpse	r31, r1
 ce2:	f8 cf       	rjmp	.-16     	; 0xcd4 <__floatsisf+0x1c>
 ce4:	fa f4       	brpl	.+62     	; 0xd24 <__floatsisf+0x6c>
 ce6:	bb 0f       	add	r27, r27
 ce8:	11 f4       	brne	.+4      	; 0xcee <__floatsisf+0x36>
 cea:	60 ff       	sbrs	r22, 0
 cec:	1b c0       	rjmp	.+54     	; 0xd24 <__floatsisf+0x6c>
 cee:	6f 5f       	subi	r22, 0xFF	; 255
 cf0:	7f 4f       	sbci	r23, 0xFF	; 255
 cf2:	8f 4f       	sbci	r24, 0xFF	; 255
 cf4:	9f 4f       	sbci	r25, 0xFF	; 255
 cf6:	16 c0       	rjmp	.+44     	; 0xd24 <__floatsisf+0x6c>
 cf8:	88 23       	and	r24, r24
 cfa:	11 f0       	breq	.+4      	; 0xd00 <__floatsisf+0x48>
 cfc:	96 e9       	ldi	r25, 0x96	; 150
 cfe:	11 c0       	rjmp	.+34     	; 0xd22 <__floatsisf+0x6a>
 d00:	77 23       	and	r23, r23
 d02:	21 f0       	breq	.+8      	; 0xd0c <__floatsisf+0x54>
 d04:	9e e8       	ldi	r25, 0x8E	; 142
 d06:	87 2f       	mov	r24, r23
 d08:	76 2f       	mov	r23, r22
 d0a:	05 c0       	rjmp	.+10     	; 0xd16 <__floatsisf+0x5e>
 d0c:	66 23       	and	r22, r22
 d0e:	71 f0       	breq	.+28     	; 0xd2c <__floatsisf+0x74>
 d10:	96 e8       	ldi	r25, 0x86	; 134
 d12:	86 2f       	mov	r24, r22
 d14:	70 e0       	ldi	r23, 0x00	; 0
 d16:	60 e0       	ldi	r22, 0x00	; 0
 d18:	2a f0       	brmi	.+10     	; 0xd24 <__floatsisf+0x6c>
 d1a:	9a 95       	dec	r25
 d1c:	66 0f       	add	r22, r22
 d1e:	77 1f       	adc	r23, r23
 d20:	88 1f       	adc	r24, r24
 d22:	da f7       	brpl	.-10     	; 0xd1a <__floatsisf+0x62>
 d24:	88 0f       	add	r24, r24
 d26:	96 95       	lsr	r25
 d28:	87 95       	ror	r24
 d2a:	97 f9       	bld	r25, 7
 d2c:	08 95       	ret

00000d2e <__fp_inf>:
 d2e:	97 f9       	bld	r25, 7
 d30:	9f 67       	ori	r25, 0x7F	; 127
 d32:	80 e8       	ldi	r24, 0x80	; 128
 d34:	70 e0       	ldi	r23, 0x00	; 0
 d36:	60 e0       	ldi	r22, 0x00	; 0
 d38:	08 95       	ret

00000d3a <__fp_nan>:
 d3a:	9f ef       	ldi	r25, 0xFF	; 255
 d3c:	80 ec       	ldi	r24, 0xC0	; 192
 d3e:	08 95       	ret

00000d40 <__fp_pscA>:
 d40:	00 24       	eor	r0, r0
 d42:	0a 94       	dec	r0
 d44:	16 16       	cp	r1, r22
 d46:	17 06       	cpc	r1, r23
 d48:	18 06       	cpc	r1, r24
 d4a:	09 06       	cpc	r0, r25
 d4c:	08 95       	ret

00000d4e <__fp_pscB>:
 d4e:	00 24       	eor	r0, r0
 d50:	0a 94       	dec	r0
 d52:	12 16       	cp	r1, r18
 d54:	13 06       	cpc	r1, r19
 d56:	14 06       	cpc	r1, r20
 d58:	05 06       	cpc	r0, r21
 d5a:	08 95       	ret

00000d5c <__fp_round>:
 d5c:	09 2e       	mov	r0, r25
 d5e:	03 94       	inc	r0
 d60:	00 0c       	add	r0, r0
 d62:	11 f4       	brne	.+4      	; 0xd68 <__fp_round+0xc>
 d64:	88 23       	and	r24, r24
 d66:	52 f0       	brmi	.+20     	; 0xd7c <__fp_round+0x20>
 d68:	bb 0f       	add	r27, r27
 d6a:	40 f4       	brcc	.+16     	; 0xd7c <__fp_round+0x20>
 d6c:	bf 2b       	or	r27, r31
 d6e:	11 f4       	brne	.+4      	; 0xd74 <__fp_round+0x18>
 d70:	60 ff       	sbrs	r22, 0
 d72:	04 c0       	rjmp	.+8      	; 0xd7c <__fp_round+0x20>
 d74:	6f 5f       	subi	r22, 0xFF	; 255
 d76:	7f 4f       	sbci	r23, 0xFF	; 255
 d78:	8f 4f       	sbci	r24, 0xFF	; 255
 d7a:	9f 4f       	sbci	r25, 0xFF	; 255
 d7c:	08 95       	ret

00000d7e <__fp_split3>:
 d7e:	57 fd       	sbrc	r21, 7
 d80:	90 58       	subi	r25, 0x80	; 128
 d82:	44 0f       	add	r20, r20
 d84:	55 1f       	adc	r21, r21
 d86:	59 f0       	breq	.+22     	; 0xd9e <__fp_splitA+0x10>
 d88:	5f 3f       	cpi	r21, 0xFF	; 255
 d8a:	71 f0       	breq	.+28     	; 0xda8 <__fp_splitA+0x1a>
 d8c:	47 95       	ror	r20

00000d8e <__fp_splitA>:
 d8e:	88 0f       	add	r24, r24
 d90:	97 fb       	bst	r25, 7
 d92:	99 1f       	adc	r25, r25
 d94:	61 f0       	breq	.+24     	; 0xdae <__fp_splitA+0x20>
 d96:	9f 3f       	cpi	r25, 0xFF	; 255
 d98:	79 f0       	breq	.+30     	; 0xdb8 <__fp_splitA+0x2a>
 d9a:	87 95       	ror	r24
 d9c:	08 95       	ret
 d9e:	12 16       	cp	r1, r18
 da0:	13 06       	cpc	r1, r19
 da2:	14 06       	cpc	r1, r20
 da4:	55 1f       	adc	r21, r21
 da6:	f2 cf       	rjmp	.-28     	; 0xd8c <__fp_split3+0xe>
 da8:	46 95       	lsr	r20
 daa:	f1 df       	rcall	.-30     	; 0xd8e <__fp_splitA>
 dac:	08 c0       	rjmp	.+16     	; 0xdbe <__fp_splitA+0x30>
 dae:	16 16       	cp	r1, r22
 db0:	17 06       	cpc	r1, r23
 db2:	18 06       	cpc	r1, r24
 db4:	99 1f       	adc	r25, r25
 db6:	f1 cf       	rjmp	.-30     	; 0xd9a <__fp_splitA+0xc>
 db8:	86 95       	lsr	r24
 dba:	71 05       	cpc	r23, r1
 dbc:	61 05       	cpc	r22, r1
 dbe:	08 94       	sec
 dc0:	08 95       	ret

00000dc2 <__fp_zero>:
 dc2:	e8 94       	clt

00000dc4 <__fp_szero>:
 dc4:	bb 27       	eor	r27, r27
 dc6:	66 27       	eor	r22, r22
 dc8:	77 27       	eor	r23, r23
 dca:	cb 01       	movw	r24, r22
 dcc:	97 f9       	bld	r25, 7
 dce:	08 95       	ret

00000dd0 <__mulsf3>:
 dd0:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <__mulsf3x>
 dd4:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__fp_round>
 dd8:	0e 94 a0 06 	call	0xd40	; 0xd40 <__fp_pscA>
 ddc:	38 f0       	brcs	.+14     	; 0xdec <__mulsf3+0x1c>
 dde:	0e 94 a7 06 	call	0xd4e	; 0xd4e <__fp_pscB>
 de2:	20 f0       	brcs	.+8      	; 0xdec <__mulsf3+0x1c>
 de4:	95 23       	and	r25, r21
 de6:	11 f0       	breq	.+4      	; 0xdec <__mulsf3+0x1c>
 de8:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_inf>
 dec:	0c 94 9d 06 	jmp	0xd3a	; 0xd3a <__fp_nan>
 df0:	11 24       	eor	r1, r1
 df2:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__fp_szero>

00000df6 <__mulsf3x>:
 df6:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__fp_split3>
 dfa:	70 f3       	brcs	.-36     	; 0xdd8 <__mulsf3+0x8>

00000dfc <__mulsf3_pse>:
 dfc:	95 9f       	mul	r25, r21
 dfe:	c1 f3       	breq	.-16     	; 0xdf0 <__mulsf3+0x20>
 e00:	95 0f       	add	r25, r21
 e02:	50 e0       	ldi	r21, 0x00	; 0
 e04:	55 1f       	adc	r21, r21
 e06:	62 9f       	mul	r22, r18
 e08:	f0 01       	movw	r30, r0
 e0a:	72 9f       	mul	r23, r18
 e0c:	bb 27       	eor	r27, r27
 e0e:	f0 0d       	add	r31, r0
 e10:	b1 1d       	adc	r27, r1
 e12:	63 9f       	mul	r22, r19
 e14:	aa 27       	eor	r26, r26
 e16:	f0 0d       	add	r31, r0
 e18:	b1 1d       	adc	r27, r1
 e1a:	aa 1f       	adc	r26, r26
 e1c:	64 9f       	mul	r22, r20
 e1e:	66 27       	eor	r22, r22
 e20:	b0 0d       	add	r27, r0
 e22:	a1 1d       	adc	r26, r1
 e24:	66 1f       	adc	r22, r22
 e26:	82 9f       	mul	r24, r18
 e28:	22 27       	eor	r18, r18
 e2a:	b0 0d       	add	r27, r0
 e2c:	a1 1d       	adc	r26, r1
 e2e:	62 1f       	adc	r22, r18
 e30:	73 9f       	mul	r23, r19
 e32:	b0 0d       	add	r27, r0
 e34:	a1 1d       	adc	r26, r1
 e36:	62 1f       	adc	r22, r18
 e38:	83 9f       	mul	r24, r19
 e3a:	a0 0d       	add	r26, r0
 e3c:	61 1d       	adc	r22, r1
 e3e:	22 1f       	adc	r18, r18
 e40:	74 9f       	mul	r23, r20
 e42:	33 27       	eor	r19, r19
 e44:	a0 0d       	add	r26, r0
 e46:	61 1d       	adc	r22, r1
 e48:	23 1f       	adc	r18, r19
 e4a:	84 9f       	mul	r24, r20
 e4c:	60 0d       	add	r22, r0
 e4e:	21 1d       	adc	r18, r1
 e50:	82 2f       	mov	r24, r18
 e52:	76 2f       	mov	r23, r22
 e54:	6a 2f       	mov	r22, r26
 e56:	11 24       	eor	r1, r1
 e58:	9f 57       	subi	r25, 0x7F	; 127
 e5a:	50 40       	sbci	r21, 0x00	; 0
 e5c:	9a f0       	brmi	.+38     	; 0xe84 <__mulsf3_pse+0x88>
 e5e:	f1 f0       	breq	.+60     	; 0xe9c <__mulsf3_pse+0xa0>
 e60:	88 23       	and	r24, r24
 e62:	4a f0       	brmi	.+18     	; 0xe76 <__mulsf3_pse+0x7a>
 e64:	ee 0f       	add	r30, r30
 e66:	ff 1f       	adc	r31, r31
 e68:	bb 1f       	adc	r27, r27
 e6a:	66 1f       	adc	r22, r22
 e6c:	77 1f       	adc	r23, r23
 e6e:	88 1f       	adc	r24, r24
 e70:	91 50       	subi	r25, 0x01	; 1
 e72:	50 40       	sbci	r21, 0x00	; 0
 e74:	a9 f7       	brne	.-22     	; 0xe60 <__mulsf3_pse+0x64>
 e76:	9e 3f       	cpi	r25, 0xFE	; 254
 e78:	51 05       	cpc	r21, r1
 e7a:	80 f0       	brcs	.+32     	; 0xe9c <__mulsf3_pse+0xa0>
 e7c:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_inf>
 e80:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__fp_szero>
 e84:	5f 3f       	cpi	r21, 0xFF	; 255
 e86:	e4 f3       	brlt	.-8      	; 0xe80 <__mulsf3_pse+0x84>
 e88:	98 3e       	cpi	r25, 0xE8	; 232
 e8a:	d4 f3       	brlt	.-12     	; 0xe80 <__mulsf3_pse+0x84>
 e8c:	86 95       	lsr	r24
 e8e:	77 95       	ror	r23
 e90:	67 95       	ror	r22
 e92:	b7 95       	ror	r27
 e94:	f7 95       	ror	r31
 e96:	e7 95       	ror	r30
 e98:	9f 5f       	subi	r25, 0xFF	; 255
 e9a:	c1 f7       	brne	.-16     	; 0xe8c <__mulsf3_pse+0x90>
 e9c:	fe 2b       	or	r31, r30
 e9e:	88 0f       	add	r24, r24
 ea0:	91 1d       	adc	r25, r1
 ea2:	96 95       	lsr	r25
 ea4:	87 95       	ror	r24
 ea6:	97 f9       	bld	r25, 7
 ea8:	08 95       	ret

00000eaa <__divmodsi4>:
 eaa:	05 2e       	mov	r0, r21
 eac:	97 fb       	bst	r25, 7
 eae:	1e f4       	brtc	.+6      	; 0xeb6 <__divmodsi4+0xc>
 eb0:	00 94       	com	r0
 eb2:	0e 94 6c 07 	call	0xed8	; 0xed8 <__negsi2>
 eb6:	57 fd       	sbrc	r21, 7
 eb8:	07 d0       	rcall	.+14     	; 0xec8 <__divmodsi4_neg2>
 eba:	0e 94 74 07 	call	0xee8	; 0xee8 <__udivmodsi4>
 ebe:	07 fc       	sbrc	r0, 7
 ec0:	03 d0       	rcall	.+6      	; 0xec8 <__divmodsi4_neg2>
 ec2:	4e f4       	brtc	.+18     	; 0xed6 <__divmodsi4_exit>
 ec4:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__negsi2>

00000ec8 <__divmodsi4_neg2>:
 ec8:	50 95       	com	r21
 eca:	40 95       	com	r20
 ecc:	30 95       	com	r19
 ece:	21 95       	neg	r18
 ed0:	3f 4f       	sbci	r19, 0xFF	; 255
 ed2:	4f 4f       	sbci	r20, 0xFF	; 255
 ed4:	5f 4f       	sbci	r21, 0xFF	; 255

00000ed6 <__divmodsi4_exit>:
 ed6:	08 95       	ret

00000ed8 <__negsi2>:
 ed8:	90 95       	com	r25
 eda:	80 95       	com	r24
 edc:	70 95       	com	r23
 ede:	61 95       	neg	r22
 ee0:	7f 4f       	sbci	r23, 0xFF	; 255
 ee2:	8f 4f       	sbci	r24, 0xFF	; 255
 ee4:	9f 4f       	sbci	r25, 0xFF	; 255
 ee6:	08 95       	ret

00000ee8 <__udivmodsi4>:
 ee8:	a1 e2       	ldi	r26, 0x21	; 33
 eea:	1a 2e       	mov	r1, r26
 eec:	aa 1b       	sub	r26, r26
 eee:	bb 1b       	sub	r27, r27
 ef0:	fd 01       	movw	r30, r26
 ef2:	0d c0       	rjmp	.+26     	; 0xf0e <__udivmodsi4_ep>

00000ef4 <__udivmodsi4_loop>:
 ef4:	aa 1f       	adc	r26, r26
 ef6:	bb 1f       	adc	r27, r27
 ef8:	ee 1f       	adc	r30, r30
 efa:	ff 1f       	adc	r31, r31
 efc:	a2 17       	cp	r26, r18
 efe:	b3 07       	cpc	r27, r19
 f00:	e4 07       	cpc	r30, r20
 f02:	f5 07       	cpc	r31, r21
 f04:	20 f0       	brcs	.+8      	; 0xf0e <__udivmodsi4_ep>
 f06:	a2 1b       	sub	r26, r18
 f08:	b3 0b       	sbc	r27, r19
 f0a:	e4 0b       	sbc	r30, r20
 f0c:	f5 0b       	sbc	r31, r21

00000f0e <__udivmodsi4_ep>:
 f0e:	66 1f       	adc	r22, r22
 f10:	77 1f       	adc	r23, r23
 f12:	88 1f       	adc	r24, r24
 f14:	99 1f       	adc	r25, r25
 f16:	1a 94       	dec	r1
 f18:	69 f7       	brne	.-38     	; 0xef4 <__udivmodsi4_loop>
 f1a:	60 95       	com	r22
 f1c:	70 95       	com	r23
 f1e:	80 95       	com	r24
 f20:	90 95       	com	r25
 f22:	9b 01       	movw	r18, r22
 f24:	ac 01       	movw	r20, r24
 f26:	bd 01       	movw	r22, r26
 f28:	cf 01       	movw	r24, r30
 f2a:	08 95       	ret

00000f2c <_exit>:
 f2c:	f8 94       	cli

00000f2e <__stop_program>:
 f2e:	ff cf       	rjmp	.-2      	; 0xf2e <__stop_program>
